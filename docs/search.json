[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Analysis_Plan.html#data-cleaning-plan",
    "href": "Analysis_Plan.html#data-cleaning-plan",
    "title": "Analysis Plan",
    "section": "Data Cleaning Plan",
    "text": "Data Cleaning Plan\nThe aim of data cleaning is to create a single data set with all the variables of importance. This involves checking the NA values, creating an asset index (using the consumer goods variables), reshaping some data to work on the same unit, and merging all data sets. Let’s go step by step:\n\n1. Reshape Q1_B_1\nThis contains data of animals in household. We will reshape it so that each row should be a Household. We do that in order to merge with other datasets. Replace values if need it. (NA, -1)\n\n\n\n\nflowchart LR\n  A[Q1_B_1] -->|reshape| B(New dataset:animals)\n\n\n\n\n\n\n\n\n\n\n2. Create an asset index\nThis index should include information of consumer goods, as well if having a bovine animal and if having a brick wall household.\n\n2.1. Select consumer goods\nSelect the consumer goods (from Q1_B_106 dataset) that will conform the asset.\n\n\n\n\nflowchart LR\n  A[Q1_B_1] -->|transform to <br> dichotomous variables| B(New dataset:<br> assets)\n  B(New dataset:<br> assets) -->|only goods with prevalenc <br> between 5-95%| C(New dataset:<br> assets2)\n\n\n\n\n\n\n\n\n\n\n2.2. Create own_bovine variable\nUse the previously created “animals” dataset to create a variable of owning a bovine animal.\n\n\n\n\nflowchart LR\n  A[animals] -->|subset <br> bovine animals| B(New dataset:<br> hlp1)\n\n\n\n\n\n\n\n\n\n\n2.3. Create brickwall variable\nUse the Q1_B dataset to create a variable if the household have brickwalls.\n\n\n\n\nflowchart LR\n  A[Q1_B] -->|subset <br> brickwall variable| B(New dataset:<br> hlp2)\n\n\n\n\n\n\n\n\n\n\n2.4. Merging datasets\nMerge all this datasets in order to create the asset index\n\n\n\n\nflowchart LR\n  A[hlp1] --> B(New dataset:<br> hlp)\n  C[hlp2] --> B(New dataset:<br> hlp)\n  B[New dataset:<br> hlp] --> D(New dataset:<br> assets3)\n  E[assets2] --> D(New dataset:<br> assets3)\n\n\n\n\n\n\n\n\n\n\n2.5. Use PCA to create asset_index\nCreate the asset index using the Principle component analysis (PCA) and then categorize it in 5 quintiles of wealth.\n\n\n\n\nflowchart LR\n  A[New dataset:<br> assets3] -->|Principle component <br> analysis| B(New dataset:<br> assets4)\n\n\n\n\n\n\n\n\n\n\n\n3. Merging all the databases\n\n3.1. Final Merging\n(Questionnaire_1 + asset index + animals + Q1_B + Q1_Screening)\n\n\n\n\nflowchart LR\n  A[Questionnaire_1] --> B(Quest1_assets4)\n  C(assets4) --> B(Quest1_assets4)\n  B(Quest1_assets4) --> D(Quest1_assets4_animals)\n  E(animals) --> D(Quest1_assets4_animals)\n  D(Quest1_assets4_animals) --> F(Quest1_assets4_animals_q1B)\n  G(Q1_B) --> F(Quest1_assets4_animals_q1B)\n  F(Quest1_assets4_animals_q1B)--> H(Quest1_assets4_animals_q1B_Persons)\n  I(Q1_Screening)--> H(Quest1_assets4_animals_q1B_Persons)\n\n\n\n\n\n\n\n\n\n\n3.2. Select variables of interest\nFor the final dataset\n\n\n\n\nflowchart LR\n  A(Quest1_assets4_animals_q1B_Persons) -->|selecting variables <br> of interes| B(final_dataset)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nIn this final_dataset each row is a person."
  },
  {
    "objectID": "Analysis_Plan.html#data-analysis-plan",
    "href": "Analysis_Plan.html#data-analysis-plan",
    "title": "Analysis Plan",
    "section": "Data Analysis Plan",
    "text": "Data Analysis Plan\n\n1. Exploring new variables\nExplore variables of importance as Mushahar caste, number of people living in each household, Having at least a bednet per three person, having thatched wall, unplastered brick wall or plastered brick wall, having damp_floor or spray their household.\n\n\n2. Univariate logistic regressions\nFor each of the factors recorded we assessed associations with VL in univariate logistic regression models, calculating odds ratios.\n\n\n3. Multivariate regression\nAny association that was found to be statistically significant at the level of α=0.10 in univariate analysis was assessed as a potential confounder in the association between bed net use and VL in bivariate analysis.\nWe then included in a multivariate model all factors significant at the level of α=0.10 in the univariate models.\n\n\n4. Removing variables\nWe removed one at a time secondary exposures that did not significantly improve precision of the model.\n\n\n5. Check for interaction\nWith the variables retained, we checked for interactions, for this purpose categorical variables with more than two levels should be recoded to binary."
  },
  {
    "objectID": "Case.html",
    "href": "Case.html",
    "title": "The case",
    "section": "",
    "text": "Report of VL in Bihar\nIn Bihar, India, visceral Leishmaniasis or Kala Azar is transmitted by the phlebotomine sand fly p.argentipes. The disease is known to disproportionally affect the poorest segments of society, this could be due to increased exposure to sand flies as a result of poor housing and environmental conditions.\nTo assess the contributions of different factors, a study team conducted an entomological survey in an estimated population of 2,000 and collected information on housing and environmental conditions as well as on assets owned. Some important information collected were:\n\nIt was asked whether anyone had suffered VL in the past two years. All cases reported were verified from medical records by a study physician.\nRegular use of a bed net was defined as sleeping under a bed net at least 10 months per year.\nData on ownership of a number of durable consumer goods at the level of the household was asked in order to create an asset-index .\nInformation about belonging to the scheduled castes.\nInformation on housing and on ownership of animals. Animals could either attract sand flies to the houses or divert sand flies away from humans.\nEnvironmental factors such as the presence of certain trees, water bodies and organic material."
  },
  {
    "objectID": "Data Analysis Wk1.html",
    "href": "Data Analysis Wk1.html",
    "title": "Some practice",
    "section": "",
    "text": "Exercise 1\nLet’s practice dividing and joining data.\nImport CSV\nImporting the CSV database under the name of Q1_B, with “,” as separator, and with “.” as decimal:\n\nQ1_B <- read.csv(\"C:/Users/pined/OneDrive - Universidad Nacional Mayor de San Marcos/Javier 2022/Belgica/AC2_DataAnalysis_ThWk/Material/Q1_B.csv\", sep=\",\", dec= \".\")\n\nCreate a subset by row\nChecking the identification variable of this dataset (FSN)\n\nsummary(Q1_B$FSN)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  45001   48527   52032   52110   55671   59606 \n\n\n\n\n\n\n\n\nTip\n\n\n\nThe median is 52032\n\n\nLet’s divide the data in two parts taking as cut point the half of the rows (The median of FSN)\n\ntop <- subset(Q1_B, subset= FSN < 52032)\nbottom <- subset(Q1_B, subset= FSN >= 52032)\n\nSeeing the structure of the original dataset and the new subsets\n\nstr(Q1_B)     #Original dataset\n\n'data.frame':   13377 obs. of  40 variables:\n $ ID                 : int  1 2 3 4 5 6 7 8 9 10 ...\n $ FSN                : num  45001 45002 45003 45004 45005 ...\n $ Neem_Tree          : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Neem_Tree_Distance : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Size     : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Age      : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Usage    : chr  \"\" \"\" \"\" \"\" ...\n $ Neem_Tree_Use_Other: chr  \"\" \"\" \"\" \"\" ...\n $ Bamboo_Tree        : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Bamboo_Tree_Dist   : num  3 10 16 17 5 4 15 3 1 10 ...\n $ Banana_Tree        : num  0 0 0 0 0 0 0 1 1 0 ...\n $ Banana_Tree_Dist   : num  -1 -1 -1 -1 -1 -1 -1 5 1 -1 ...\n $ Rice_Field         : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Rice_Field_Dist    : num  4 12 16 13 4 13 10 10 7 12 ...\n $ Perm_Water_Body    : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Perm_Wat_Body_Dist : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wat_Body_Mid_Point : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ No_Mosquito_Net    : num  0 2 1 0 0 0 0 0 1 0 ...\n $ Sprayed_2010       : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Sprayed_2009       : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Floor_Material     : num  153 153 153 153 153 153 153 153 155 153 ...\n $ Other_Floor_Mat    : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Is_Floor_Damp      : num  1 1 1 1 1 1 1 1 0 1 ...\n $ Roof_Material      : num  161 159 158 156 156 156 156 158 158 156 ...\n $ Other_Roof_Material: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wall_Material      : num  164 164 164 162 163 163 162 164 164 162 ...\n $ Other_Wall_Material: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Windows_in_Room    : num  1 1 1 0 0 0 0 1 1 0 ...\n $ Granaries_in_HH    : num  1 1 1 0 1 1 0 1 1 0 ...\n $ Source_Drink_Water : num  167 167 92 92 92 92 92 92 92 92 ...\n $ Other_Src_Drink_Wat: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Toilet_Facility    : num  177 177 177 177 177 177 177 177 177 177 ...\n $ Other_Toilet_Fac   : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Cooking_Fuel       : num  180 180 180 180 180 180 180 180 180 180 ...\n $ Other_Cooking_Fuel : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Source_Light       : num  182 182 182 182 182 182 182 182 182 182 ...\n $ Other_Source_Light : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Electricity_in_HH  : num  0 0 0 0 0 0 0 0 0 0 ...\n $ No_Of_Rooms        : num  2 2 3 1 2 3 2 1 3 1 ...\n $ No_Sleeping_Rooms  : num  2 2 2 1 2 2 2 1 1 1 ...\n\nstr(top)      #Subset top of the data\n\n'data.frame':   6688 obs. of  40 variables:\n $ ID                 : int  1 2 3 4 5 6 7 8 9 10 ...\n $ FSN                : num  45001 45002 45003 45004 45005 ...\n $ Neem_Tree          : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Neem_Tree_Distance : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Size     : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Age      : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Usage    : chr  \"\" \"\" \"\" \"\" ...\n $ Neem_Tree_Use_Other: chr  \"\" \"\" \"\" \"\" ...\n $ Bamboo_Tree        : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Bamboo_Tree_Dist   : num  3 10 16 17 5 4 15 3 1 10 ...\n $ Banana_Tree        : num  0 0 0 0 0 0 0 1 1 0 ...\n $ Banana_Tree_Dist   : num  -1 -1 -1 -1 -1 -1 -1 5 1 -1 ...\n $ Rice_Field         : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Rice_Field_Dist    : num  4 12 16 13 4 13 10 10 7 12 ...\n $ Perm_Water_Body    : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Perm_Wat_Body_Dist : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wat_Body_Mid_Point : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ No_Mosquito_Net    : num  0 2 1 0 0 0 0 0 1 0 ...\n $ Sprayed_2010       : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Sprayed_2009       : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Floor_Material     : num  153 153 153 153 153 153 153 153 155 153 ...\n $ Other_Floor_Mat    : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Is_Floor_Damp      : num  1 1 1 1 1 1 1 1 0 1 ...\n $ Roof_Material      : num  161 159 158 156 156 156 156 158 158 156 ...\n $ Other_Roof_Material: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wall_Material      : num  164 164 164 162 163 163 162 164 164 162 ...\n $ Other_Wall_Material: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Windows_in_Room    : num  1 1 1 0 0 0 0 1 1 0 ...\n $ Granaries_in_HH    : num  1 1 1 0 1 1 0 1 1 0 ...\n $ Source_Drink_Water : num  167 167 92 92 92 92 92 92 92 92 ...\n $ Other_Src_Drink_Wat: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Toilet_Facility    : num  177 177 177 177 177 177 177 177 177 177 ...\n $ Other_Toilet_Fac   : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Cooking_Fuel       : num  180 180 180 180 180 180 180 180 180 180 ...\n $ Other_Cooking_Fuel : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Source_Light       : num  182 182 182 182 182 182 182 182 182 182 ...\n $ Other_Source_Light : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Electricity_in_HH  : num  0 0 0 0 0 0 0 0 0 0 ...\n $ No_Of_Rooms        : num  2 2 3 1 2 3 2 1 3 1 ...\n $ No_Sleeping_Rooms  : num  2 2 2 1 2 2 2 1 1 1 ...\n\nstr(bottom)   #Subset bottom of the data\n\n'data.frame':   6689 obs. of  40 variables:\n $ ID                 : int  6689 6690 6691 6692 6693 6694 6695 6696 6697 6698 ...\n $ FSN                : num  52032 52033 52034 52035 52036 ...\n $ Neem_Tree          : num  1 1 1 1 1 1 1 1 1 0 ...\n $ Neem_Tree_Distance : num  12 30 38 38 12 16 20 25 45 -1 ...\n $ Neem_Tree_Size     : num  2 2 2 2 2 2 2 2 2 -1 ...\n $ Neem_Tree_Age      : num  2 2 2 2 2 2 2 2 2 -1 ...\n $ Neem_Tree_Usage    : chr  \"188_\" \"188_\" \"188_\" \"188_\" ...\n $ Neem_Tree_Use_Other: chr  \"\" \"\" \"\" \"\" ...\n $ Bamboo_Tree        : num  0 0 0 0 1 1 0 0 0 1 ...\n $ Bamboo_Tree_Dist   : num  -1 -1 -1 -1 5 15 -1 -1 -1 18 ...\n $ Banana_Tree        : num  1 1 0 0 1 1 1 1 1 1 ...\n $ Banana_Tree_Dist   : num  1 20 -1 -1 1 16 5 2 1 1 ...\n $ Rice_Field         : num  0 1 1 1 1 1 1 1 1 1 ...\n $ Rice_Field_Dist    : num  -1 1 1 1 10 15 18 12 1 2 ...\n $ Perm_Water_Body    : num  0 0 0 0 1 1 1 1 1 1 ...\n $ Perm_Wat_Body_Dist : num  -1 -1 -1 -1 2 1 8 12 26 17 ...\n $ Wat_Body_Mid_Point : num  -1 -1 -1 -1 1 1 1 1 1 1 ...\n $ No_Mosquito_Net    : num  1 1 1 0 1 4 4 5 1 0 ...\n $ Sprayed_2010       : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Sprayed_2009       : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Floor_Material     : num  153 153 153 153 153 153 155 155 153 153 ...\n $ Other_Floor_Mat    : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Is_Floor_Damp      : num  1 1 1 1 1 1 0 0 1 0 ...\n $ Roof_Material      : num  161 156 156 156 54 158 158 158 161 158 ...\n $ Other_Roof_Material: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wall_Material      : num  164 162 162 162 164 165 165 165 164 165 ...\n $ Other_Wall_Material: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Windows_in_Room    : num  0 0 0 0 1 1 1 1 1 1 ...\n $ Granaries_in_HH    : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Source_Drink_Water : num  92 167 167 92 167 167 167 167 167 167 ...\n $ Other_Src_Drink_Wat: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Toilet_Facility    : num  177 177 177 177 177 174 174 174 177 174 ...\n $ Other_Toilet_Fac   : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Cooking_Fuel       : num  180 180 180 180 180 180 180 180 180 180 ...\n $ Other_Cooking_Fuel : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Source_Light       : num  182 182 182 182 182 182 182 182 182 182 ...\n $ Other_Source_Light : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Electricity_in_HH  : num  0 0 0 0 0 1 1 1 0 0 ...\n $ No_Of_Rooms        : num  2 2 1 1 3 4 5 4 3 1 ...\n $ No_Sleeping_Rooms  : num  1 2 1 1 2 3 4 3 1 1 ...\n\n\n\n\n\n\n\n\nTip\n\n\n\nIn Q1_B we have 13377 obs\nIf we sum the observations in the subsets:\nTop + bottom: 6688 + 6689 =13377\nSo, it is ok\n\n\nJoining (Append)\nLet’s join the two subsets (top and bottom)\n\nmerged_top_bottom  <-  rbind(top,bottom)  #To merge\nstr(merged_top_bottom)                    #To see the result\n\n'data.frame':   13377 obs. of  40 variables:\n $ ID                 : int  1 2 3 4 5 6 7 8 9 10 ...\n $ FSN                : num  45001 45002 45003 45004 45005 ...\n $ Neem_Tree          : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Neem_Tree_Distance : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Size     : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Age      : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Usage    : chr  \"\" \"\" \"\" \"\" ...\n $ Neem_Tree_Use_Other: chr  \"\" \"\" \"\" \"\" ...\n $ Bamboo_Tree        : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Bamboo_Tree_Dist   : num  3 10 16 17 5 4 15 3 1 10 ...\n $ Banana_Tree        : num  0 0 0 0 0 0 0 1 1 0 ...\n $ Banana_Tree_Dist   : num  -1 -1 -1 -1 -1 -1 -1 5 1 -1 ...\n $ Rice_Field         : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Rice_Field_Dist    : num  4 12 16 13 4 13 10 10 7 12 ...\n $ Perm_Water_Body    : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Perm_Wat_Body_Dist : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wat_Body_Mid_Point : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ No_Mosquito_Net    : num  0 2 1 0 0 0 0 0 1 0 ...\n $ Sprayed_2010       : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Sprayed_2009       : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Floor_Material     : num  153 153 153 153 153 153 153 153 155 153 ...\n $ Other_Floor_Mat    : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Is_Floor_Damp      : num  1 1 1 1 1 1 1 1 0 1 ...\n $ Roof_Material      : num  161 159 158 156 156 156 156 158 158 156 ...\n $ Other_Roof_Material: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wall_Material      : num  164 164 164 162 163 163 162 164 164 162 ...\n $ Other_Wall_Material: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Windows_in_Room    : num  1 1 1 0 0 0 0 1 1 0 ...\n $ Granaries_in_HH    : num  1 1 1 0 1 1 0 1 1 0 ...\n $ Source_Drink_Water : num  167 167 92 92 92 92 92 92 92 92 ...\n $ Other_Src_Drink_Wat: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Toilet_Facility    : num  177 177 177 177 177 177 177 177 177 177 ...\n $ Other_Toilet_Fac   : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Cooking_Fuel       : num  180 180 180 180 180 180 180 180 180 180 ...\n $ Other_Cooking_Fuel : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Source_Light       : num  182 182 182 182 182 182 182 182 182 182 ...\n $ Other_Source_Light : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Electricity_in_HH  : num  0 0 0 0 0 0 0 0 0 0 ...\n $ No_Of_Rooms        : num  2 2 3 1 2 3 2 1 3 1 ...\n $ No_Sleeping_Rooms  : num  2 2 2 1 2 2 2 1 1 1 ...\n\n\n\n\n\n\n\n\nTip\n\n\n\nThere are 13377 obs\nIt is the same of the original, So it is ok\n\n\nCreate a subset by coll\nSeeing the names of the collums (name of the variables)\n\nnames(Q1_B)\n\n [1] \"ID\"                  \"FSN\"                 \"Neem_Tree\"          \n [4] \"Neem_Tree_Distance\"  \"Neem_Tree_Size\"      \"Neem_Tree_Age\"      \n [7] \"Neem_Tree_Usage\"     \"Neem_Tree_Use_Other\" \"Bamboo_Tree\"        \n[10] \"Bamboo_Tree_Dist\"    \"Banana_Tree\"         \"Banana_Tree_Dist\"   \n[13] \"Rice_Field\"          \"Rice_Field_Dist\"     \"Perm_Water_Body\"    \n[16] \"Perm_Wat_Body_Dist\"  \"Wat_Body_Mid_Point\"  \"No_Mosquito_Net\"    \n[19] \"Sprayed_2010\"        \"Sprayed_2009\"        \"Floor_Material\"     \n[22] \"Other_Floor_Mat\"     \"Is_Floor_Damp\"       \"Roof_Material\"      \n[25] \"Other_Roof_Material\" \"Wall_Material\"       \"Other_Wall_Material\"\n[28] \"Windows_in_Room\"     \"Granaries_in_HH\"     \"Source_Drink_Water\" \n[31] \"Other_Src_Drink_Wat\" \"Toilet_Facility\"     \"Other_Toilet_Fac\"   \n[34] \"Cooking_Fuel\"        \"Other_Cooking_Fuel\"  \"Source_Light\"       \n[37] \"Other_Source_Light\"  \"Electricity_in_HH\"   \"No_Of_Rooms\"        \n[40] \"No_Sleeping_Rooms\"  \n\n\nLet’s divide the data in two parts taking as cut point the half of the columns\nWe have to be careful to keep an identification variable in each subset (in this case is FSN)\n\nLeft <- subset(Q1_B, select=c(\"ID\", \"FSN\", \"Neem_Tree\", \"Neem_Tree_Distance\", \"Neem_Tree_Size\", \"Neem_Tree_Age\", \"Neem_Tree_Usage\", \"Neem_Tree_Use_Other\", \"Bamboo_Tree\", \"Bamboo_Tree_Dist\", \"Banana_Tree\", \"Banana_Tree_Dist\", \"Rice_Field\", \"Rice_Field_Dist\", \"Perm_Water_Body\", \"Perm_Wat_Body_Dist\",  \"Wat_Body_Mid_Point\", \"No_Mosquito_Net\", \"Sprayed_2010\", \"Sprayed_2009\", \"Floor_Material\"))\nstr(Left)\n\n'data.frame':   13377 obs. of  21 variables:\n $ ID                 : int  1 2 3 4 5 6 7 8 9 10 ...\n $ FSN                : num  45001 45002 45003 45004 45005 ...\n $ Neem_Tree          : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Neem_Tree_Distance : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Size     : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Age      : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Usage    : chr  \"\" \"\" \"\" \"\" ...\n $ Neem_Tree_Use_Other: chr  \"\" \"\" \"\" \"\" ...\n $ Bamboo_Tree        : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Bamboo_Tree_Dist   : num  3 10 16 17 5 4 15 3 1 10 ...\n $ Banana_Tree        : num  0 0 0 0 0 0 0 1 1 0 ...\n $ Banana_Tree_Dist   : num  -1 -1 -1 -1 -1 -1 -1 5 1 -1 ...\n $ Rice_Field         : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Rice_Field_Dist    : num  4 12 16 13 4 13 10 10 7 12 ...\n $ Perm_Water_Body    : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Perm_Wat_Body_Dist : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wat_Body_Mid_Point : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ No_Mosquito_Net    : num  0 2 1 0 0 0 0 0 1 0 ...\n $ Sprayed_2010       : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Sprayed_2009       : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Floor_Material     : num  153 153 153 153 153 153 153 153 155 153 ...\n\n\n\nRigth <- subset(Q1_B, select=c(\"FSN\", \"Other_Floor_Mat\", \"Is_Floor_Damp\", \"Roof_Material\", \"Other_Roof_Material\", \"Wall_Material\", \"Other_Wall_Material\", \"Windows_in_Room\", \"Granaries_in_HH\", \"Source_Drink_Water\", \"Other_Src_Drink_Wat\", \"Toilet_Facility\", \"Other_Toilet_Fac\", \"Cooking_Fuel\", \"Other_Cooking_Fuel\", \"Source_Light\", \"Other_Source_Light\", \"Electricity_in_HH\", \"No_Of_Rooms\", \"No_Sleeping_Rooms\"))\n\n#Or select the opposite (With a \"-\" in front of the c):\n#Rigth <- subset(Q1_B, select=-c(\"ID\", \"Neem_Tree\", \"Neem_Tree_Distance\", \"Neem_Tree_Size\", \"Neem_Tree_Age\", \"Neem_Tree_Usage\", \"Neem_Tree_Use_Other\", \"Bamboo_Tree\", \"Bamboo_Tree_Dist\", \"Banana_Tree\", \"Banana_Tree_Dist\", \"Rice_Field\", \"Rice_Field_Dist\", \"Perm_Water_Body\", \"Perm_Wat_Body_Dist\",  \"Wat_Body_Mid_Point\", \"No_Mosquito_Net\", \"Sprayed_2010\", \"Sprayed_2009\", \"Floor_Material\"))\n\nstr(Rigth)\n\n'data.frame':   13377 obs. of  20 variables:\n $ FSN                : num  45001 45002 45003 45004 45005 ...\n $ Other_Floor_Mat    : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Is_Floor_Damp      : num  1 1 1 1 1 1 1 1 0 1 ...\n $ Roof_Material      : num  161 159 158 156 156 156 156 158 158 156 ...\n $ Other_Roof_Material: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wall_Material      : num  164 164 164 162 163 163 162 164 164 162 ...\n $ Other_Wall_Material: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Windows_in_Room    : num  1 1 1 0 0 0 0 1 1 0 ...\n $ Granaries_in_HH    : num  1 1 1 0 1 1 0 1 1 0 ...\n $ Source_Drink_Water : num  167 167 92 92 92 92 92 92 92 92 ...\n $ Other_Src_Drink_Wat: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Toilet_Facility    : num  177 177 177 177 177 177 177 177 177 177 ...\n $ Other_Toilet_Fac   : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Cooking_Fuel       : num  180 180 180 180 180 180 180 180 180 180 ...\n $ Other_Cooking_Fuel : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Source_Light       : num  182 182 182 182 182 182 182 182 182 182 ...\n $ Other_Source_Light : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Electricity_in_HH  : num  0 0 0 0 0 0 0 0 0 0 ...\n $ No_Of_Rooms        : num  2 2 3 1 2 3 2 1 3 1 ...\n $ No_Sleeping_Rooms  : num  2 2 2 1 2 2 2 1 1 1 ...\n\n\nJoining (Merge)\nLet’s join the two subsets (left and right) according to the FSN\n\nmerged_left_right  <-  merge(Left, Rigth, all=TRUE, by = \"FSN\")\nstr(merged_left_right)\n\n'data.frame':   13377 obs. of  40 variables:\n $ FSN                : num  45001 45002 45003 45004 45005 ...\n $ ID                 : int  1 2 3 4 5 6 7 8 9 10 ...\n $ Neem_Tree          : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Neem_Tree_Distance : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Size     : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Age      : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Usage    : chr  \"\" \"\" \"\" \"\" ...\n $ Neem_Tree_Use_Other: chr  \"\" \"\" \"\" \"\" ...\n $ Bamboo_Tree        : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Bamboo_Tree_Dist   : num  3 10 16 17 5 4 15 3 1 10 ...\n $ Banana_Tree        : num  0 0 0 0 0 0 0 1 1 0 ...\n $ Banana_Tree_Dist   : num  -1 -1 -1 -1 -1 -1 -1 5 1 -1 ...\n $ Rice_Field         : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Rice_Field_Dist    : num  4 12 16 13 4 13 10 10 7 12 ...\n $ Perm_Water_Body    : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Perm_Wat_Body_Dist : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wat_Body_Mid_Point : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ No_Mosquito_Net    : num  0 2 1 0 0 0 0 0 1 0 ...\n $ Sprayed_2010       : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Sprayed_2009       : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Floor_Material     : num  153 153 153 153 153 153 153 153 155 153 ...\n $ Other_Floor_Mat    : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Is_Floor_Damp      : num  1 1 1 1 1 1 1 1 0 1 ...\n $ Roof_Material      : num  161 159 158 156 156 156 156 158 158 156 ...\n $ Other_Roof_Material: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wall_Material      : num  164 164 164 162 163 163 162 164 164 162 ...\n $ Other_Wall_Material: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Windows_in_Room    : num  1 1 1 0 0 0 0 1 1 0 ...\n $ Granaries_in_HH    : num  1 1 1 0 1 1 0 1 1 0 ...\n $ Source_Drink_Water : num  167 167 92 92 92 92 92 92 92 92 ...\n $ Other_Src_Drink_Wat: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Toilet_Facility    : num  177 177 177 177 177 177 177 177 177 177 ...\n $ Other_Toilet_Fac   : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Cooking_Fuel       : num  180 180 180 180 180 180 180 180 180 180 ...\n $ Other_Cooking_Fuel : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Source_Light       : num  182 182 182 182 182 182 182 182 182 182 ...\n $ Other_Source_Light : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Electricity_in_HH  : num  0 0 0 0 0 0 0 0 0 0 ...\n $ No_Of_Rooms        : num  2 2 3 1 2 3 2 1 3 1 ...\n $ No_Sleeping_Rooms  : num  2 2 2 1 2 2 2 1 1 1 ...\n\n\nExercise 2\nLet’s practice renaming variables and replacing values\n\nQ1_B_1 <- read.csv(\"C:/Users/pined/OneDrive - Universidad Nacional Mayor de San Marcos/Javier 2022/Belgica/AC2_DataAnalysis_ThWk/Material/Q1_B_1.csv\", sep=\",\", dec= \".\")\n\n\nstr(Q1_B_1)\n\n'data.frame':   9029 obs. of  6 variables:\n $ FSN              : int  45001 45001 45002 45003 45004 45006 45009 45021 45021 45024 ...\n $ Animal_Name      : chr  \"Goats\" \"Poultry (chickens, ducks, pigeon)\" \"Buffaloes\" \"Cows/Oxen\" ...\n $ Animal_Count     : int  3 1 1 1 2 2 7 3 1 3 ...\n $ Animal_Distance  : int  5 0 4 3 5 0 0 15 5 15 ...\n $ Keep_Inside_House: int  1 1 0 1 1 1 1 0 1 1 ...\n $ Days_Inside_House: int  120 365 -1 210 180 360 360 -1 150 90 ...\n\nhead(Q1_B_1)\n\n    FSN                       Animal_Name Animal_Count Animal_Distance\n1 45001                             Goats            3               5\n2 45001 Poultry (chickens, ducks, pigeon)            1               0\n3 45002                         Buffaloes            1               4\n4 45003                         Cows/Oxen            1               3\n5 45004                             Goats            2               5\n6 45006                         Cows/Oxen            2               0\n  Keep_Inside_House Days_Inside_House\n1                 1               120\n2                 1               365\n3                 0                -1\n4                 1               210\n5                 1               180\n6                 1               360\n\n\n\n\n\n\n\n\nTip\n\n\n\nWe observe:\n\nThere are 9029 obs\nThe animal name is quite large sometimes\nThe variable names are quite large\n\n\n\nRenaming variables\nRenaming variables labels: In collumns 2-5 to “anim”, “count”, “dist”, “indor”, “daysin”\n\nnames(Q1_B_1)[c(2,3,4,5,6)] <- c(\"anim\", \"count\", \"dist\", \"indor\", \"daysin\")\nstr(Q1_B_1)\n\n'data.frame':   9029 obs. of  6 variables:\n $ FSN   : int  45001 45001 45002 45003 45004 45006 45009 45021 45021 45024 ...\n $ anim  : chr  \"Goats\" \"Poultry (chickens, ducks, pigeon)\" \"Buffaloes\" \"Cows/Oxen\" ...\n $ count : int  3 1 1 1 2 2 7 3 1 3 ...\n $ dist  : int  5 0 4 3 5 0 0 15 5 15 ...\n $ indor : int  1 1 0 1 1 1 1 0 1 1 ...\n $ daysin: int  120 365 -1 210 180 360 360 -1 150 90 ...\n\n#View(Q1_B_1)\n\n\ntable(Q1_B_1$count)\n\n\n  -1    0    1    2    3    4    5    6    7    8    9   10   11   12   14   15 \n   8   10 4104 3288  885  451  135   83   23   15    2    9    1    3    1    1 \n  16   20   30   35   50   60 \n   3    1    1    1    2    2 \n\ntable(Q1_B_1$dist)\n\n\n  -1    0    1    2    3    4    5    6    7    8    9   10   11   12   13   14 \n  24 3307  492  774  618  255  953  238  173  217   11  578   10   87    7    9 \n  15   16   17   18   19   20   22   23   24   25   26   29   30   32   35   38 \n 231    9    3   28    4  149   12    2    1   59    1    2   70    1   40    2 \n  40   43   45   49   50   55   58   60   68   69   70   75   80   90   95  100 \n  31    1   13    1  133   10    1   29    2    3   17   14    4    1    1  163 \n 105  110  120  150  180  200  210  250  300  400  500  600 1000 \n   3    7    3   60    2   77    2    4   19    9   40    9    3 \n\ntable(Q1_B_1$indor)\n\n\n   0    1   89 \n4816 4200   13 \n\ntable(Q1_B_1$daysin)\n\n\n  -1    0    1    3    5    7    8   10   12   15   18   20   30   35   40   45 \n4823    1    2    1    4    2    2    8    1    1    1    3   48    2    2    7 \n  50   60   65   70   80   90  100  110  120  122  130  150  160  165  175  180 \n   2   84    1    1    5  192   23    2  273    1    2   74   13    5    2  466 \n 190  200  210  215  220  230  240  245  250  260  265  270  280  300  310  340 \n   1   57   11    1    1    4   82    1   10    7    3    3   33   36    1    1 \n 350  355  356  360  365 \n   1    1    1   21 2699 \n\n\nReplacing values in observations\n\ntable(Q1_B_1$anim)\n\n\n                        Buffaloes                         Cows/Oxen \n                             1592                              3055 \n                             Dogs                             Goats \n                               38                              3816 \n                            Other                              Pigs \n                                3                                20 \nPoultry (chickens, ducks, pigeon) \n                              505 \n\nQ1_B_1$anim[Q1_B_1$anim ==\"Buffaloes\"] <- \"Buff\"\nQ1_B_1$anim[Q1_B_1$anim ==\"Goats\"] <- \"Goat\"\n\n#But if we want to keep the 4 (x) first characters in a all rows\nQ1_B_1$anim <- substr(Q1_B_1$anim, 0, 3)\ntable(Q1_B_1$anim)\n\n\n Buf  Cow  Dog  Goa  Oth  Pig  Pou \n1592 3055   38 3816    3   20  505 \n\nstr(Q1_B_1)\n\n'data.frame':   9029 obs. of  6 variables:\n $ FSN   : int  45001 45001 45002 45003 45004 45006 45009 45021 45021 45024 ...\n $ anim  : chr  \"Goa\" \"Pou\" \"Buf\" \"Cow\" ...\n $ count : int  3 1 1 1 2 2 7 3 1 3 ...\n $ dist  : int  5 0 4 3 5 0 0 15 5 15 ...\n $ indor : int  1 1 0 1 1 1 1 0 1 1 ...\n $ daysin: int  120 365 -1 210 180 360 360 -1 150 90 ...\n\n\nWe are going to save this data because we are going to use it later\n\nsaveRDS(Q1_B_1, \"Q1_B_1.RDS\")"
  },
  {
    "objectID": "Data Analysis Wk2.html",
    "href": "Data Analysis Wk2.html",
    "title": "Data Cleaning",
    "section": "",
    "text": "Data Cleaning\n1. Reshape Q1_B_1\nThis dataset contains data of animals in household. We will reshape it so that each row should be a Household. We do that in order to merge with other datasets. Replace values if need it. (NA, -1)\n\n#Use the dataset with the short name variables we worked before and save\nQ1_B_1 = readRDS(\"Q1_B_1.RDS\")\n\n1.1 Reshaping from long to Wide\nWe need one line for each household.\nSo, we will use reshape command to say: “Reshape the database taking in to account that i want to make the database wider, having just one line for each household (FSN) and replicating the variables count, dist, indor, daysin for every animal that the household had”\n\nanimals <- reshape(Q1_B_1,direction = \"wide\", timevar =\"anim\", idvar =\"FSN\", v.names = c(\"count\",\"dist\",\"indor\", \"daysin\"), sep = \"_\")\nstr(animals)\n\n'data.frame':   7147 obs. of  29 variables:\n $ FSN       : int  45001 45002 45003 45004 45006 45009 45021 45024 45025 45027 ...\n $ count_Goa : int  3 NA NA 2 NA 7 1 3 3 NA ...\n $ dist_Goa  : int  5 NA NA 5 NA 0 5 15 0 NA ...\n $ indor_Goa : int  1 NA NA 1 NA 1 1 1 1 NA ...\n $ daysin_Goa: int  120 NA NA 180 NA 360 150 90 90 NA ...\n $ count_Pou : int  1 NA NA NA NA NA NA NA NA 2 ...\n $ dist_Pou  : int  0 NA NA NA NA NA NA NA NA 0 ...\n $ indor_Pou : int  1 NA NA NA NA NA NA NA NA 1 ...\n $ daysin_Pou: int  365 NA NA NA NA NA NA NA NA 360 ...\n $ count_Buf : int  NA 1 NA NA NA NA NA NA NA NA ...\n $ dist_Buf  : int  NA 4 NA NA NA NA NA NA NA NA ...\n $ indor_Buf : int  NA 0 NA NA NA NA NA NA NA NA ...\n $ daysin_Buf: int  NA -1 NA NA NA NA NA NA NA NA ...\n $ count_Cow : int  NA NA 1 NA 2 NA 3 NA NA NA ...\n $ dist_Cow  : int  NA NA 3 NA 0 NA 15 NA NA NA ...\n $ indor_Cow : int  NA NA 1 NA 1 NA 0 NA NA NA ...\n $ daysin_Cow: int  NA NA 210 NA 360 NA -1 NA NA NA ...\n $ count_Pig : int  NA NA NA NA NA NA NA NA NA NA ...\n $ dist_Pig  : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Pig : int  NA NA NA NA NA NA NA NA NA NA ...\n $ daysin_Pig: int  NA NA NA NA NA NA NA NA NA NA ...\n $ count_Dog : int  NA NA NA NA NA NA NA NA NA NA ...\n $ dist_Dog  : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Dog : int  NA NA NA NA NA NA NA NA NA NA ...\n $ daysin_Dog: int  NA NA NA NA NA NA NA NA NA NA ...\n $ count_Oth : int  NA NA NA NA NA NA NA NA NA NA ...\n $ dist_Oth  : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Oth : int  NA NA NA NA NA NA NA NA NA NA ...\n $ daysin_Oth: int  NA NA NA NA NA NA NA NA NA NA ...\n - attr(*, \"reshapeWide\")=List of 5\n  ..$ v.names: chr [1:4] \"count\" \"dist\" \"indor\" \"daysin\"\n  ..$ timevar: chr \"anim\"\n  ..$ idvar  : chr \"FSN\"\n  ..$ times  : chr [1:7] \"Goa\" \"Pou\" \"Buf\" \"Cow\" ...\n  ..$ varying: chr [1:4, 1:7] \"count_Goa\" \"dist_Goa\" \"indor_Goa\" \"daysin_Goa\" ...\n\nclass(animals)\n\n[1] \"data.frame\"\n\n\n\n\n\n\n\n\nTip\n\n\n\nWe observe:\n\nThat now we have less observations (7147)(before was 9029 obs)\nThere are a lot of NA (households than doesn’t have that animal)\nThere are also some -1 values\n\n\n\n1.2 Replacing innnecesary values\nWe want to replace the NA and the -1 to Zero in all columns\n\nnames(animals)\n\n [1] \"FSN\"        \"count_Goa\"  \"dist_Goa\"   \"indor_Goa\"  \"daysin_Goa\"\n [6] \"count_Pou\"  \"dist_Pou\"   \"indor_Pou\"  \"daysin_Pou\" \"count_Buf\" \n[11] \"dist_Buf\"   \"indor_Buf\"  \"daysin_Buf\" \"count_Cow\"  \"dist_Cow\"  \n[16] \"indor_Cow\"  \"daysin_Cow\" \"count_Pig\"  \"dist_Pig\"   \"indor_Pig\" \n[21] \"daysin_Pig\" \"count_Dog\"  \"dist_Dog\"   \"indor_Dog\"  \"daysin_Dog\"\n[26] \"count_Oth\"  \"dist_Oth\"   \"indor_Oth\"  \"daysin_Oth\"\n\n#str(animals)\n#View(animals)\n\nanimals$indor_Pou[is.na(animals$indor_Pou)] <- 0\nanimals$indor_Pig[is.na(animals$indor_Pig)] <- 0\nanimals$indor_Oth[is.na(animals$indor_Oth)] <- 0\nanimals$indor_Goa[is.na(animals$indor_Goa)] <- 0\nanimals$indor_Dog[is.na(animals$indor_Dog)] <- 0\nanimals$indor_Cow[is.na(animals$indor_Cow)] <- 0\nanimals$indor_Buf[is.na(animals$indor_Buf)] <- 0\n\nanimals$daysin_Pou[is.na(animals$daysin_Pou) | animals$daysin_Pou == -1] <- 0\nanimals$daysin_Pig[is.na(animals$daysin_Pig) | animals$daysin_Pig == -1] <- 0\nanimals$daysin_Oth[is.na(animals$daysin_Oth) | animals$daysin_Oth == -1] <- 0\nanimals$daysin_Goa[is.na(animals$daysin_Goa) | animals$daysin_Goa == -1] <- 0\nanimals$daysin_Dog[is.na(animals$daysin_Dog) | animals$daysin_Dog == -1] <- 0\nanimals$daysin_Cow[is.na(animals$daysin_Cow) | animals$daysin_Cow == -1] <- 0\nanimals$daysin_Buf[is.na(animals$daysin_Buf) | animals$daysin_Buf == -1] <- 0\n\nanimals$count_Pou[is.na(animals$count_Pou)| animals$count_Pou == -1] <- 0\nanimals$count_Pig[is.na(animals$count_Pig)| animals$count_Pig == -1] <- 0\nanimals$count_Oth[is.na(animals$count_Oth)| animals$count_Oth == -1] <- 0\nanimals$count_Goa[is.na(animals$count_Goa)| animals$count_Goa == -1] <- 0\nanimals$count_Dog[is.na(animals$count_Dog)| animals$count_Dog == -1] <- 0\nanimals$count_Cow[is.na(animals$count_Cow)| animals$count_Cow == -1] <- 0\nanimals$count_Buf[is.na(animals$count_Buf)| animals$count_Buf == -1] <- 0\n\nstr(animals)\n\n'data.frame':   7147 obs. of  29 variables:\n $ FSN       : int  45001 45002 45003 45004 45006 45009 45021 45024 45025 45027 ...\n $ count_Goa : num  3 0 0 2 0 7 1 3 3 0 ...\n $ dist_Goa  : int  5 NA NA 5 NA 0 5 15 0 NA ...\n $ indor_Goa : num  1 0 0 1 0 1 1 1 1 0 ...\n $ daysin_Goa: num  120 0 0 180 0 360 150 90 90 0 ...\n $ count_Pou : num  1 0 0 0 0 0 0 0 0 2 ...\n $ dist_Pou  : int  0 NA NA NA NA NA NA NA NA 0 ...\n $ indor_Pou : num  1 0 0 0 0 0 0 0 0 1 ...\n $ daysin_Pou: num  365 0 0 0 0 0 0 0 0 360 ...\n $ count_Buf : num  0 1 0 0 0 0 0 0 0 0 ...\n $ dist_Buf  : int  NA 4 NA NA NA NA NA NA NA NA ...\n $ indor_Buf : num  0 0 0 0 0 0 0 0 0 0 ...\n $ daysin_Buf: num  0 0 0 0 0 0 0 0 0 0 ...\n $ count_Cow : num  0 0 1 0 2 0 3 0 0 0 ...\n $ dist_Cow  : int  NA NA 3 NA 0 NA 15 NA NA NA ...\n $ indor_Cow : num  0 0 1 0 1 0 0 0 0 0 ...\n $ daysin_Cow: num  0 0 210 0 360 0 0 0 0 0 ...\n $ count_Pig : num  0 0 0 0 0 0 0 0 0 0 ...\n $ dist_Pig  : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Pig : num  0 0 0 0 0 0 0 0 0 0 ...\n $ daysin_Pig: num  0 0 0 0 0 0 0 0 0 0 ...\n $ count_Dog : num  0 0 0 0 0 0 0 0 0 0 ...\n $ dist_Dog  : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Dog : num  0 0 0 0 0 0 0 0 0 0 ...\n $ daysin_Dog: num  0 0 0 0 0 0 0 0 0 0 ...\n $ count_Oth : num  0 0 0 0 0 0 0 0 0 0 ...\n $ dist_Oth  : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Oth : num  0 0 0 0 0 0 0 0 0 0 ...\n $ daysin_Oth: num  0 0 0 0 0 0 0 0 0 0 ...\n - attr(*, \"reshapeWide\")=List of 5\n  ..$ v.names: chr [1:4] \"count\" \"dist\" \"indor\" \"daysin\"\n  ..$ timevar: chr \"anim\"\n  ..$ idvar  : chr \"FSN\"\n  ..$ times  : chr [1:7] \"Goa\" \"Pou\" \"Buf\" \"Cow\" ...\n  ..$ varying: chr [1:4, 1:7] \"count_Goa\" \"dist_Goa\" \"indor_Goa\" \"daysin_Goa\" ...\n\n\n2. Create an asset index\nThis index should include information of consumer goods, as well if having a bovine animal and if having a brick wall household.\n2.1. Select consumer goods\nSelect the consumer goods (from Q1_B_106 dataset) that will conform the asset.\n2.1.1. Importing the CSV database under the name of Q1_B_106, with “,” as separator, and with “.” as decimal:\n\nQ1_B_106 <- read.csv(\"C:/Users/pined/OneDrive - Universidad Nacional Mayor de San Marcos/Javier 2022/Belgica/AC2_DataAnalysis_ThWk/Material/Q1_B_106.csv\", sep=\",\", dec= \".\")\n\n2.1.2. Seeing the structure and values of the dataset\n\nstr(Q1_B_106)\n\n'data.frame':   13377 obs. of  25 variables:\n $ FSN             : int  45001 45002 45003 45004 45005 45006 45007 45008 45009 45010 ...\n $ Radio           : int  1 1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ CD_Player       : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ BW_Television   : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Color_Television: int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Video_DVD_Player: int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Mobile          : int  -1 -1 -1 -1 -1 1 -1 -1 -1 -1 ...\n $ Non_Mobile_Phone: int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Refrigerator    : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Iron            : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Sewing_Machine  : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Watch           : int  -1 -1 -1 -1 -1 1 -1 -1 -1 -1 ...\n $ Pressure_Cooker : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Chairs          : int  1 -1 -1 -1 1 1 -1 -1 2 -1 ...\n $ Sofas           : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Tables          : int  -1 -1 -1 -1 -1 1 -1 -1 -1 -1 ...\n $ Cot_Bed         : int  2 2 3 -1 2 1 2 1 2 -1 ...\n $ Cupboards       : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Bicycle         : int  1 1 1 -1 -1 2 -1 -1 1 -1 ...\n $ Motor_Cycle     : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Animal_Draw_Cart: int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Car             : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Tractor         : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Computer        : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Electric_Fan    : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n\n\n\n\n\n\n\n\nTip\n\n\n\nAccording to dictionary\n-1 : Missing or not available\n0, 1, 2, 3 : Number of items they have\n\n\n2.1.3. Checking the summary of the variables\n\nsummary(Q1_B_106)\n\n      FSN            Radio           CD_Player       BW_Television    \n Min.   :45001   Min.   :-1.0000   Min.   :-1.0000   Min.   :-1.0000  \n 1st Qu.:48527   1st Qu.:-1.0000   1st Qu.:-1.0000   1st Qu.:-1.0000  \n Median :52032   Median :-1.0000   Median :-1.0000   Median :-1.0000  \n Mean   :52110   Mean   :-0.7555   Mean   :-0.9517   Mean   :-0.9015  \n 3rd Qu.:55671   3rd Qu.:-1.0000   3rd Qu.:-1.0000   3rd Qu.:-1.0000  \n Max.   :59606   Max.   : 6.0000   Max.   : 3.0000   Max.   : 2.0000  \n Color_Television  Video_DVD_Player      Mobile         Non_Mobile_Phone \n Min.   :-1.0000   Min.   :-1.0000   Min.   :-1.00000   Min.   :-1.0000  \n 1st Qu.:-1.0000   1st Qu.:-1.0000   1st Qu.:-1.00000   1st Qu.:-1.0000  \n Median :-1.0000   Median :-1.0000   Median :-1.00000   Median :-1.0000  \n Mean   :-0.9217   Mean   :-0.9785   Mean   : 0.01323   Mean   :-0.9885  \n 3rd Qu.:-1.0000   3rd Qu.:-1.0000   3rd Qu.: 1.00000   3rd Qu.:-1.0000  \n Max.   : 2.0000   Max.   : 1.0000   Max.   :10.00000   Max.   : 1.0000  \n  Refrigerator          Iron         Sewing_Machine        Watch        \n Min.   :-1.0000   Min.   :-1.0000   Min.   :-1.0000   Min.   :-1.0000  \n 1st Qu.:-1.0000   1st Qu.:-1.0000   1st Qu.:-1.0000   1st Qu.:-1.0000  \n Median :-1.0000   Median :-1.0000   Median :-1.0000   Median :-1.0000  \n Mean   :-0.9937   Mean   :-0.9415   Mean   :-0.8969   Mean   :-0.3998  \n 3rd Qu.:-1.0000   3rd Qu.:-1.0000   3rd Qu.:-1.0000   3rd Qu.: 1.0000  \n Max.   : 1.0000   Max.   : 4.0000   Max.   : 3.0000   Max.   :12.0000  \n Pressure_Cooker       Chairs            Sofas             Tables       \n Min.   :-1.0000   Min.   :-1.0000   Min.   :-1.0000   Min.   :-1.0000  \n 1st Qu.:-1.0000   1st Qu.:-1.0000   1st Qu.:-1.0000   1st Qu.:-1.0000  \n Median :-1.0000   Median :-1.0000   Median :-1.0000   Median :-1.0000  \n Mean   :-0.8435   Mean   : 0.4572   Mean   :-0.9602   Mean   :-0.2501  \n 3rd Qu.:-1.0000   3rd Qu.: 2.0000   3rd Qu.:-1.0000   3rd Qu.: 1.0000  \n Max.   : 5.0000   Max.   :40.0000   Max.   : 8.0000   Max.   :10.0000  \n    Cot_Bed         Cupboards          Bicycle          Motor_Cycle     \n Min.   :-1.000   Min.   :-1.0000   Min.   :-1.00000   Min.   :-1.0000  \n 1st Qu.: 2.000   1st Qu.:-1.0000   1st Qu.:-1.00000   1st Qu.:-1.0000  \n Median : 2.000   Median :-1.0000   Median : 1.00000   Median :-1.0000  \n Mean   : 2.599   Mean   :-0.9624   Mean   : 0.09793   Mean   :-0.8656  \n 3rd Qu.: 3.000   3rd Qu.:-1.0000   3rd Qu.: 1.00000   3rd Qu.:-1.0000  \n Max.   :24.000   Max.   : 7.0000   Max.   : 6.00000   Max.   : 5.0000  \n Animal_Draw_Cart       Car             Tractor           Computer      \n Min.   :-1.0000   Min.   :-1.0000   Min.   :-1.0000   Min.   :-1.0000  \n 1st Qu.:-1.0000   1st Qu.:-1.0000   1st Qu.:-1.0000   1st Qu.:-1.0000  \n Median :-1.0000   Median :-1.0000   Median :-1.0000   Median :-1.0000  \n Mean   :-0.9919   Mean   :-0.9938   Mean   :-0.9874   Mean   :-0.9982  \n 3rd Qu.:-1.0000   3rd Qu.:-1.0000   3rd Qu.:-1.0000   3rd Qu.:-1.0000  \n Max.   : 1.0000   Max.   : 2.0000   Max.   : 3.0000   Max.   : 1.0000  \n  Electric_Fan    \n Min.   :-1.0000  \n 1st Qu.:-1.0000  \n Median :-1.0000  \n Mean   :-0.6872  \n 3rd Qu.:-1.0000  \n Max.   :11.0000  \n\n\n\n\n\n\n\n\nTip\n\n\n\nExample of what we can see: The maximum number of radios in a household is 6\n\n\n2.1.4. Transform to dichotomous variables\nWe need that all ‘-1’ be converting to ‘0’.\nand all value more than ‘≥ 1’ be converting to ‘1’\n\n#We can do it by using \"if else\":\nQ1_B_106$own_Radio <- ifelse(Q1_B_106$Radio>0,1,0)\n\n\n#But other way is: \n#Q1_B_106$own_Radio <- as.numeric(Q1_B_106$Radio > 0)\n#Ask to create a variable called \"own_Radio\" only TRUE when \"Radio\" is more than 0 and converting that into a number (as.numeric) (1:true,0:false)\n\n\n#Checking if it works\ntable(Q1_B_106$own_Radio, Q1_B_106$Radio, useNA = \"always\")\n\n      \n          -1     1     2     3     6  <NA>\n  0    11753     0     0     0     0     0\n  1        0  1608    12     3     1     0\n  <NA>     0     0     0     0     0     0\n\nsummary(Q1_B_106$own_Radio)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.0000  0.1214  0.0000  1.0000 \n\n\n\n\n\n\n\n\nTip\n\n\n\nAs a result we can see that: 12.14% of households have at least one radio. Remember: When we only have 0 and 1, The mean of the variable is the proportion of individuals having the exposure.\n\n\nWe need to do that for every variable\n\nQ1_B_106$own_Radio <- ifelse(Q1_B_106$Radio>0,1,0)\nQ1_B_106$own_CD_Player <- ifelse(Q1_B_106$CD_Player>0,1,0)\nQ1_B_106$own_BW_Television <- ifelse(Q1_B_106$BW_Television>0,1,0)\nQ1_B_106$own_Color_Television <- ifelse(Q1_B_106$Color_Television>0,1,0)\nQ1_B_106$own_Video_DVD_Player <- ifelse(Q1_B_106$Video_DVD_Player>0,1,0)\nQ1_B_106$own_Mobile <- ifelse(Q1_B_106$Mobile>0,1,0)\nQ1_B_106$own_Non_Mobile_Phone <- ifelse(Q1_B_106$Non_Mobile_Phone>0,1,0)\nQ1_B_106$own_Refrigerator <- ifelse(Q1_B_106$Refrigerator>0,1,0)\nQ1_B_106$own_Iron <- ifelse(Q1_B_106$Iron>0,1,0)\nQ1_B_106$own_Sewing_Machine <- ifelse(Q1_B_106$Sewing_Machine>0,1,0)\nQ1_B_106$own_Watch <- ifelse(Q1_B_106$Watch>0,1,0)\nQ1_B_106$own_Pressure_Cooker <- ifelse(Q1_B_106$Pressure_Cooker>0,1,0)\nQ1_B_106$own_Chairs <- ifelse(Q1_B_106$Chairs>0,1,0)\nQ1_B_106$own_Sofas <- ifelse(Q1_B_106$Sofas>0,1,0)\nQ1_B_106$own_Tables <- ifelse(Q1_B_106$Tables>0,1,0)\nQ1_B_106$own_Cot_Bed <- ifelse(Q1_B_106$Cot_Bed>0,1,0)\nQ1_B_106$own_Cupboards <- ifelse(Q1_B_106$Cupboards>0,1,0)\nQ1_B_106$own_Bicycle <- ifelse(Q1_B_106$Bicycle>0,1,0)\nQ1_B_106$own_Motor_Cycle <- ifelse(Q1_B_106$Motor_Cycle>0,1,0)\nQ1_B_106$own_Animal_Draw_Cart <- ifelse(Q1_B_106$Animal_Draw_Cart>0,1,0)\nQ1_B_106$own_Car <- ifelse(Q1_B_106$Car>0,1,0)\nQ1_B_106$own_Tractor <- ifelse(Q1_B_106$Tractor>0,1,0)\nQ1_B_106$own_Computer <- ifelse(Q1_B_106$Computer>0,1,0)\nQ1_B_106$own_Electric_Fan <- ifelse(Q1_B_106$Electric_Fan>0,1,0)\n\n2.1.5. Now we will make a subset containing only the ‘own’ variables and FSN\n\nassets <- subset(Q1_B_106, select = grepl(\"own|FSN\", names(Q1_B_106)))\nstr(assets)  \n\n'data.frame':   13377 obs. of  25 variables:\n $ FSN                 : int  45001 45002 45003 45004 45005 45006 45007 45008 45009 45010 ...\n $ own_Radio           : num  1 1 0 0 0 0 0 0 0 0 ...\n $ own_CD_Player       : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_BW_Television   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Color_Television: num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Video_DVD_Player: num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Mobile          : num  0 0 0 0 0 1 0 0 0 0 ...\n $ own_Non_Mobile_Phone: num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Refrigerator    : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Iron            : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Sewing_Machine  : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Watch           : num  0 0 0 0 0 1 0 0 0 0 ...\n $ own_Pressure_Cooker : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Chairs          : num  1 0 0 0 1 1 0 0 1 0 ...\n $ own_Sofas           : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Tables          : num  0 0 0 0 0 1 0 0 0 0 ...\n $ own_Cot_Bed         : num  1 1 1 0 1 1 1 1 1 0 ...\n $ own_Cupboards       : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Bicycle         : num  1 1 1 0 0 1 0 0 1 0 ...\n $ own_Motor_Cycle     : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Animal_Draw_Cart: num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Car             : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Tractor         : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Computer        : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Electric_Fan    : num  0 0 0 0 0 0 0 0 0 0 ...\n\n\n2.1.6. Now we will focus only in those variables whose mean have a value between 5-95% (0.05-0.95)\nwhy?: Because We are going to exclude the variables that nobody has (less than 5%) and the variables that all people has (more than 95%)\n\n#summary(assets)\nround(sapply(assets, FUN=mean),3)   #To display the mean of each variable with 3 decimals\n\n                 FSN            own_Radio        own_CD_Player \n           52110.000                0.121                0.024 \n   own_BW_Television own_Color_Television own_Video_DVD_Player \n               0.049                0.039                0.011 \n          own_Mobile own_Non_Mobile_Phone     own_Refrigerator \n               0.476                0.006                0.003 \n            own_Iron   own_Sewing_Machine            own_Watch \n               0.028                0.051                0.264 \n own_Pressure_Cooker           own_Chairs            own_Sofas \n               0.072                0.429                0.017 \n          own_Tables          own_Cot_Bed        own_Cupboards \n               0.329                0.968                0.013 \n         own_Bicycle      own_Motor_Cycle own_Animal_Draw_Cart \n               0.524                0.065                0.004 \n             own_Car          own_Tractor         own_Computer \n               0.003                0.006                0.001 \n    own_Electric_Fan \n               0.110 \n\n\n\n\n\n\n\n\nTip\n\n\n\nBesides FSN, 10 variables have a value between 5-95% (0.05-0.95)\n\n\n2.1.7. We are going to create a new subset (assets2) with only in those variables whose mean have a value between 5-95% (0.05-0.95)\n\nassets2 <- subset(assets, select = c(FSN, own_Radio,own_Mobile, own_Sewing_Machine, own_Watch, own_Pressure_Cooker, own_Chairs, own_Tables, own_Bicycle, own_Motor_Cycle, own_Electric_Fan))\nstr(assets2)\n\n'data.frame':   13377 obs. of  11 variables:\n $ FSN                : int  45001 45002 45003 45004 45005 45006 45007 45008 45009 45010 ...\n $ own_Radio          : num  1 1 0 0 0 0 0 0 0 0 ...\n $ own_Mobile         : num  0 0 0 0 0 1 0 0 0 0 ...\n $ own_Sewing_Machine : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Watch          : num  0 0 0 0 0 1 0 0 0 0 ...\n $ own_Pressure_Cooker: num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Chairs         : num  1 0 0 0 1 1 0 0 1 0 ...\n $ own_Tables         : num  0 0 0 0 0 1 0 0 0 0 ...\n $ own_Bicycle        : num  1 1 1 0 0 1 0 0 1 0 ...\n $ own_Motor_Cycle    : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Electric_Fan   : num  0 0 0 0 0 0 0 0 0 0 ...\n\n\n2.2. Create own_bovine variable\nUse the previously created “animals” dataset to create a variable of owning a bovine animal.\nThe researchers noticed that having a “bovines animals” variable is important, so we need to incorporate it. The only problem is that the animals information is in another dataset.\n‘own_bov’ for each household = whether or not it owns cows or buffaloes\n\nhlp1 <- subset(animals, select=c(FSN, count_Cow, count_Buf))\nhlp1$own_bov <- NA\nhlp1$own_bov[hlp1$count_Cow== 0 & hlp1$count_Buf==0] <- 0\nhlp1$own_bov[hlp1$count_Cow> 0 | hlp1$count_Buf>0] <- 1 \nstr(hlp1)\n\n'data.frame':   7147 obs. of  4 variables:\n $ FSN      : int  45001 45002 45003 45004 45006 45009 45021 45024 45025 45027 ...\n $ count_Cow: num  0 0 1 0 2 0 3 0 0 0 ...\n $ count_Buf: num  0 1 0 0 0 0 0 0 0 0 ...\n $ own_bov  : num  0 1 1 0 1 0 1 0 0 0 ...\n\n\n2.3. Create brickwall variable\nUse the Q1_B dataset to create a variable if the household have brickwalls.\nThe researchers also noticed that having a “brick_wall” variable is important, so we need to incorporate it. The only problem is that the brick_wall information is in another dataset.\n2.3.1. Opening Q1_B dataset\n\nQ1_B <- read.csv(\"C:/Users/pined/OneDrive - Universidad Nacional Mayor de San Marcos/Javier 2022/Belgica/AC2_DataAnalysis_ThWk/Material/Q1_B.csv\", sep=\",\", dec= \".\")\n\n2.3.2. Checking the variable Wall_Material in the Q1_B dataset\n\ntable(Q1_B$Wall_Material)\n\n\n   6  162  163  164  165  166 \n   4 4498  169 5791 2914    1 \n\n\n\n\n\n\n\n\nTip\n\n\n\nAccording the code list:\n6= Other\n163= Grass\n163= Bamboo\n164, 165, 166= Brick\nSo we only need those who had the value 164 or 165 in the Wall_Material variable\n\n\n2.3.3. I only need “FSN” and “WallMaterial” variables\n\nhlp2 <- subset(Q1_B, select = c(FSN, Wall_Material))\n\n2.3.4. Creating a new variable called brickwall according to what I need\n\nhlp2$brick_wall <- NA\nhlp2$brick_wall[hlp2$Wall_Material %in% c(6,162,163)] <- 0\nhlp2$brick_wall[hlp2$Wall_Material %in% c(164:166)] <- 1\n\ntable(hlp2$brick_wall, Q1_B$Wall_Material)\n\n   \n       6  162  163  164  165  166\n  0    4 4498  169    0    0    0\n  1    0    0    0 5791 2914    1\n\n\n2.4. Merging datasets\nMerge all this datasets in order to create the asset index\n\n\nMerging planning\n\n\n2.4.1. Merging hlp1 and hlp2\n\nstr(hlp1)\n\n'data.frame':   7147 obs. of  4 variables:\n $ FSN      : int  45001 45002 45003 45004 45006 45009 45021 45024 45025 45027 ...\n $ count_Cow: num  0 0 1 0 2 0 3 0 0 0 ...\n $ count_Buf: num  0 1 0 0 0 0 0 0 0 0 ...\n $ own_bov  : num  0 1 1 0 1 0 1 0 0 0 ...\n\nstr(hlp2)\n\n'data.frame':   13377 obs. of  3 variables:\n $ FSN          : num  45001 45002 45003 45004 45005 ...\n $ Wall_Material: num  164 164 164 162 163 163 162 164 164 162 ...\n $ brick_wall   : num  1 1 1 0 0 0 0 1 1 0 ...\n\nhlp  <-  merge(hlp2, hlp1, all=TRUE, by = \"FSN\")\nstr(hlp)\n\n'data.frame':   13377 obs. of  6 variables:\n $ FSN          : num  45001 45002 45003 45004 45005 ...\n $ Wall_Material: num  164 164 164 162 163 163 162 164 164 162 ...\n $ brick_wall   : num  1 1 1 0 0 0 0 1 1 0 ...\n $ count_Cow    : num  0 0 1 0 NA 2 NA NA 0 NA ...\n $ count_Buf    : num  0 1 0 0 NA 0 NA NA 0 NA ...\n $ own_bov      : num  0 1 1 0 NA 1 NA NA 0 NA ...\n\n#View(hlp)\n\nwe Dont need countCow, count_Buf or Wall_Material\n\nhlp <- subset(hlp, select=-c(count_Cow,count_Buf,Wall_Material))\nstr(hlp)\n\n'data.frame':   13377 obs. of  3 variables:\n $ FSN       : num  45001 45002 45003 45004 45005 ...\n $ brick_wall: num  1 1 1 0 0 0 0 1 1 0 ...\n $ own_bov   : num  0 1 1 0 NA 1 NA NA 0 NA ...\n\n\n2.4.2. Merging hlp2 to assets2\n\nstr(hlp)\n\n'data.frame':   13377 obs. of  3 variables:\n $ FSN       : num  45001 45002 45003 45004 45005 ...\n $ brick_wall: num  1 1 1 0 0 0 0 1 1 0 ...\n $ own_bov   : num  0 1 1 0 NA 1 NA NA 0 NA ...\n\nstr(assets2)\n\n'data.frame':   13377 obs. of  11 variables:\n $ FSN                : int  45001 45002 45003 45004 45005 45006 45007 45008 45009 45010 ...\n $ own_Radio          : num  1 1 0 0 0 0 0 0 0 0 ...\n $ own_Mobile         : num  0 0 0 0 0 1 0 0 0 0 ...\n $ own_Sewing_Machine : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Watch          : num  0 0 0 0 0 1 0 0 0 0 ...\n $ own_Pressure_Cooker: num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Chairs         : num  1 0 0 0 1 1 0 0 1 0 ...\n $ own_Tables         : num  0 0 0 0 0 1 0 0 0 0 ...\n $ own_Bicycle        : num  1 1 1 0 0 1 0 0 1 0 ...\n $ own_Motor_Cycle    : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Electric_Fan   : num  0 0 0 0 0 0 0 0 0 0 ...\n\nassets3  <-  merge(assets2, hlp, all=TRUE, by = \"FSN\")\nstr(assets3)\n\n'data.frame':   13377 obs. of  13 variables:\n $ FSN                : int  45001 45002 45003 45004 45005 45006 45007 45008 45009 45010 ...\n $ own_Radio          : num  1 1 0 0 0 0 0 0 0 0 ...\n $ own_Mobile         : num  0 0 0 0 0 1 0 0 0 0 ...\n $ own_Sewing_Machine : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Watch          : num  0 0 0 0 0 1 0 0 0 0 ...\n $ own_Pressure_Cooker: num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Chairs         : num  1 0 0 0 1 1 0 0 1 0 ...\n $ own_Tables         : num  0 0 0 0 0 1 0 0 0 0 ...\n $ own_Bicycle        : num  1 1 1 0 0 1 0 0 1 0 ...\n $ own_Motor_Cycle    : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Electric_Fan   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ brick_wall         : num  1 1 1 0 0 0 0 1 1 0 ...\n $ own_bov            : num  0 1 1 0 NA 1 NA NA 0 NA ...\n\n#View(assets3)\n\n2.4.3. Check NA values\nThe merging creates NA values (ex: in own_bov), but that values are because that household doesnt have a bovine animal, so it should be 0\nChecking NA\n\ntable (assets3$own_bov)\n\n\n   0    1 \n2816 4331 \n\ntable (assets3$own_bov, useNA = \"ifany\")\n\n\n   0    1 <NA> \n2816 4331 6230 \n\ntable (assets3$own_bov, useNA = \"always\")\n\n\n   0    1 <NA> \n2816 4331 6230 \n\nstr(assets3)\n\n'data.frame':   13377 obs. of  13 variables:\n $ FSN                : int  45001 45002 45003 45004 45005 45006 45007 45008 45009 45010 ...\n $ own_Radio          : num  1 1 0 0 0 0 0 0 0 0 ...\n $ own_Mobile         : num  0 0 0 0 0 1 0 0 0 0 ...\n $ own_Sewing_Machine : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Watch          : num  0 0 0 0 0 1 0 0 0 0 ...\n $ own_Pressure_Cooker: num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Chairs         : num  1 0 0 0 1 1 0 0 1 0 ...\n $ own_Tables         : num  0 0 0 0 0 1 0 0 0 0 ...\n $ own_Bicycle        : num  1 1 1 0 0 1 0 0 1 0 ...\n $ own_Motor_Cycle    : num  0 0 0 0 0 0 0 0 0 0 ...\n $ own_Electric_Fan   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ brick_wall         : num  1 1 1 0 0 0 0 1 1 0 ...\n $ own_bov            : num  0 1 1 0 NA 1 NA NA 0 NA ...\n\n\n2.4.4. Replacing NA\n\nassets3$own_bov[is.na(assets3$own_bov)]<- 0\n#View(assets3)\ntable (assets3$own_bov, useNA = \"always\")\n\n\n   0    1 <NA> \n9046 4331    0 \n\n\n2.5. Use PCA to create asset_index\nCreate the asset index using the Principle component analysis (PCA) and then categorize it in 5 quintiles of wealth.\n\n\n\n\n\n\nWhat is a Principle component analysis (PCA)?\n\n\n\nPrincipal Component Analysis (PCA) is a statistical technique that is used to transform a large number of variables into a smaller number (or just 1) new variable. Is often used for making scores or index.\nWhen we do a score/index we tend to put equal weight to every variable because we think that every variable is equal important. But is that true? Usually no. So in Principle component analysis we try to put a weight to every variable depending the variance. It is useful to also put in in order to know which first component we need to work. (Which variables are representatives and in what measure)\nThe idea behind PCA is to find the underlying patterns in the data using its variances. The analysis will create a first (principal) component, then a second, third, and so on. Each component captures a different aspect of the variation in the data, with the first component capturing the most variation, and subsequent components capturing progressively less.\nUsually we use the first component and with that then create a weighted variable for each individual.\n\n\n\nnames(assets3)\n\n [1] \"FSN\"                 \"own_Radio\"           \"own_Mobile\"         \n [4] \"own_Sewing_Machine\"  \"own_Watch\"           \"own_Pressure_Cooker\"\n [7] \"own_Chairs\"          \"own_Tables\"          \"own_Bicycle\"        \n[10] \"own_Motor_Cycle\"     \"own_Electric_Fan\"    \"brick_wall\"         \n[13] \"own_bov\"            \n\n\n2.5.1. PCA command\n\npcamod <- princomp(~own_Radio+own_Mobile+own_Sewing_Machine++own_Watch+own_Pressure_Cooker+own_Chairs+own_Tables+own_Bicycle+own_Motor_Cycle+own_Electric_Fan+brick_wall+ own_bov, cor=TRUE, data= assets3)\n\n2.5.2. Inspect the component loadings of Comp.1\n\npcamod$loadings\n\n\nLoadings:\n                    Comp.1 Comp.2 Comp.3 Comp.4 Comp.5 Comp.6 Comp.7 Comp.8\nown_Radio            0.235  0.106  0.288  0.506  0.724         0.208       \nown_Mobile           0.321  0.245 -0.106  0.173               -0.415 -0.498\nown_Sewing_Machine   0.235 -0.274  0.302  0.125 -0.210 -0.799  0.203 -0.131\nown_Watch            0.351                0.120               -0.199  0.427\nown_Pressure_Cooker  0.310 -0.348  0.220                      -0.195  0.415\nown_Chairs           0.357  0.183 -0.334        -0.198         0.388       \nown_Tables           0.362        -0.333        -0.216  0.115  0.420       \nown_Bicycle          0.246  0.501  0.137               -0.150 -0.448       \nown_Motor_Cycle      0.296 -0.280  0.277 -0.205         0.309        -0.588\nown_Electric_Fan     0.328 -0.299        -0.228         0.286 -0.159  0.101\nbrick_wall           0.215        -0.452 -0.540  0.563 -0.357              \nown_bov                     0.523  0.485 -0.523                0.317  0.121\n                    Comp.9 Comp.10 Comp.11 Comp.12\nown_Radio                                         \nown_Mobile          -0.289  0.508  -0.162         \nown_Sewing_Machine                  0.140         \nown_Watch           -0.676 -0.420                 \nown_Pressure_Cooker  0.310  0.280  -0.573         \nown_Chairs           0.132                 -0.711 \nown_Tables           0.147                  0.696 \nown_Bicycle          0.516 -0.379   0.145         \nown_Motor_Cycle            -0.479  -0.186         \nown_Electric_Fan            0.260   0.745         \nbrick_wall                                        \nown_bov             -0.225  0.196                 \n\n               Comp.1 Comp.2 Comp.3 Comp.4 Comp.5 Comp.6 Comp.7 Comp.8 Comp.9\nSS loadings     1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000\nProportion Var  0.083  0.083  0.083  0.083  0.083  0.083  0.083  0.083  0.083\nCumulative Var  0.083  0.167  0.250  0.333  0.417  0.500  0.583  0.667  0.750\n               Comp.10 Comp.11 Comp.12\nSS loadings      1.000   1.000   1.000\nProportion Var   0.083   0.083   0.083\nCumulative Var   0.833   0.917   1.000\n\n\n\n\n\n\n\n\nTip\n\n\n\nWe have to choose one model (one component) to select their scores\n\n\n2.5.3. Extract the component scores\nCreate a variable named PC1 in assets3 from the scores un pcamod\n\nassets3$PC1 <- pcamod$scores[ ,1]\n#View(assets3)\n\n2.5.4. Check the quintiles\n\nquantile(assets3$PC1, probs = seq(0,1, 1/5))\n\n         0%         20%         40%         60%         80%        100% \n-2.11118368 -1.66100172 -0.98271146 -0.06987735  1.45281527  7.18120558 \n\n\n2.5.5. Create a new categorical variable ‘asset_index’ with values 1-5 by quintile\n\nassets3$asset_index <- NA\nassets3$asset_index[assets3$PC1 >= -2.11118368   & assets3$PC1 <=-1.66100172  ] <- \"1\"\nassets3$asset_index[assets3$PC1 >-1.66100172    & assets3$PC1 <=-0.98271146   ] <- \"2\"\nassets3$asset_index[assets3$PC1 >-0.98271146    & assets3$PC1 <=-0.06987735    ] <- \"3\"\nassets3$asset_index[assets3$PC1 >-0.06987735     & assets3$PC1 <=1.45281527    ] <- \"4\"\nassets3$asset_index[assets3$PC1 >1.45281527     & assets3$PC1 <=7.18120558  ] <- \"5\"\n\n2.5.6. Drop unnecessary variables by making a subset\nOr final dataset (with the Asset index) only need to have FSN and asset_index\n\nassets4 <- subset(assets3, select= c(FSN,asset_index))\nstr(assets4)\n\n'data.frame':   13377 obs. of  2 variables:\n $ FSN        : int  45001 45002 45003 45004 45005 45006 45007 45008 45009 45010 ...\n $ asset_index: chr  \"4\" \"3\" \"2\" \"1\" ...\n\ntable(assets4$asset_index)\n\n\n   1    2    3    4    5 \n3243 2254 2581 2632 2667 \n\n\n3. Merging all the databases\n3.1. Final Merging\n(Questionnaire_1 + asset index + animals + Q1_B + Q1_Screening)\n3.1.1 Opening Questionnaire_1\n\nQuestionnaire_1 <- read.csv(\"C:/Users/pined/OneDrive - Universidad Nacional Mayor de San Marcos/Javier 2022/Belgica/AC2_DataAnalysis_ThWk/Material/Questionnaire_1.csv\", sep=\",\", dec= \".\")\n\n\nstr(Questionnaire_1)\n\n'data.frame':   13377 obs. of  10 variables:\n $ FSN                    : int  45001 45002 45003 45004 45005 45006 45007 45008 45009 45010 ...\n $ panchyat_id            : int  2 2 2 2 2 2 2 2 2 2 ...\n $ village_id             : int  11 11 11 11 11 11 11 11 11 11 ...\n $ ward_no                : int  1 1 1 1 1 1 1 1 1 1 ...\n $ household_no           : int  21 680 290 3390 181 3501 1401 2330 3750 2371 ...\n $ household_head_age     : int  50 35 60 35 40 40 60 23 25 40 ...\n $ household_head_sex     : int  2 2 2 2 2 2 2 2 2 3 ...\n $ household_head_religion: int  4 4 4 4 4 4 4 4 4 4 ...\n $ household_head_caste   : int  9 9 9 9 9 9 9 9 9 9 ...\n $ household_head_subcaste: chr  \"PASWAN\" \"PASWAN\" \"PASWAN\" \"PASWAN\" ...\n\n\n3.1.2 Merging with the assets\n\nQuest1_assets4  <-  merge(assets4, Questionnaire_1, all=TRUE, by = \"FSN\")\nstr(Quest1_assets4)\n\n'data.frame':   13377 obs. of  11 variables:\n $ FSN                    : int  45001 45002 45003 45004 45005 45006 45007 45008 45009 45010 ...\n $ asset_index            : chr  \"4\" \"3\" \"2\" \"1\" ...\n $ panchyat_id            : int  2 2 2 2 2 2 2 2 2 2 ...\n $ village_id             : int  11 11 11 11 11 11 11 11 11 11 ...\n $ ward_no                : int  1 1 1 1 1 1 1 1 1 1 ...\n $ household_no           : int  21 680 290 3390 181 3501 1401 2330 3750 2371 ...\n $ household_head_age     : int  50 35 60 35 40 40 60 23 25 40 ...\n $ household_head_sex     : int  2 2 2 2 2 2 2 2 2 3 ...\n $ household_head_religion: int  4 4 4 4 4 4 4 4 4 4 ...\n $ household_head_caste   : int  9 9 9 9 9 9 9 9 9 9 ...\n $ household_head_subcaste: chr  \"PASWAN\" \"PASWAN\" \"PASWAN\" \"PASWAN\" ...\n\n\n3.1.3 Merging with animals\n\nstr(animals)\n\n'data.frame':   7147 obs. of  29 variables:\n $ FSN       : int  45001 45002 45003 45004 45006 45009 45021 45024 45025 45027 ...\n $ count_Goa : num  3 0 0 2 0 7 1 3 3 0 ...\n $ dist_Goa  : int  5 NA NA 5 NA 0 5 15 0 NA ...\n $ indor_Goa : num  1 0 0 1 0 1 1 1 1 0 ...\n $ daysin_Goa: num  120 0 0 180 0 360 150 90 90 0 ...\n $ count_Pou : num  1 0 0 0 0 0 0 0 0 2 ...\n $ dist_Pou  : int  0 NA NA NA NA NA NA NA NA 0 ...\n $ indor_Pou : num  1 0 0 0 0 0 0 0 0 1 ...\n $ daysin_Pou: num  365 0 0 0 0 0 0 0 0 360 ...\n $ count_Buf : num  0 1 0 0 0 0 0 0 0 0 ...\n $ dist_Buf  : int  NA 4 NA NA NA NA NA NA NA NA ...\n $ indor_Buf : num  0 0 0 0 0 0 0 0 0 0 ...\n $ daysin_Buf: num  0 0 0 0 0 0 0 0 0 0 ...\n $ count_Cow : num  0 0 1 0 2 0 3 0 0 0 ...\n $ dist_Cow  : int  NA NA 3 NA 0 NA 15 NA NA NA ...\n $ indor_Cow : num  0 0 1 0 1 0 0 0 0 0 ...\n $ daysin_Cow: num  0 0 210 0 360 0 0 0 0 0 ...\n $ count_Pig : num  0 0 0 0 0 0 0 0 0 0 ...\n $ dist_Pig  : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Pig : num  0 0 0 0 0 0 0 0 0 0 ...\n $ daysin_Pig: num  0 0 0 0 0 0 0 0 0 0 ...\n $ count_Dog : num  0 0 0 0 0 0 0 0 0 0 ...\n $ dist_Dog  : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Dog : num  0 0 0 0 0 0 0 0 0 0 ...\n $ daysin_Dog: num  0 0 0 0 0 0 0 0 0 0 ...\n $ count_Oth : num  0 0 0 0 0 0 0 0 0 0 ...\n $ dist_Oth  : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Oth : num  0 0 0 0 0 0 0 0 0 0 ...\n $ daysin_Oth: num  0 0 0 0 0 0 0 0 0 0 ...\n - attr(*, \"reshapeWide\")=List of 5\n  ..$ v.names: chr [1:4] \"count\" \"dist\" \"indor\" \"daysin\"\n  ..$ timevar: chr \"anim\"\n  ..$ idvar  : chr \"FSN\"\n  ..$ times  : chr [1:7] \"Goa\" \"Pou\" \"Buf\" \"Cow\" ...\n  ..$ varying: chr [1:4, 1:7] \"count_Goa\" \"dist_Goa\" \"indor_Goa\" \"daysin_Goa\" ...\n\nstr(Quest1_assets4)\n\n'data.frame':   13377 obs. of  11 variables:\n $ FSN                    : int  45001 45002 45003 45004 45005 45006 45007 45008 45009 45010 ...\n $ asset_index            : chr  \"4\" \"3\" \"2\" \"1\" ...\n $ panchyat_id            : int  2 2 2 2 2 2 2 2 2 2 ...\n $ village_id             : int  11 11 11 11 11 11 11 11 11 11 ...\n $ ward_no                : int  1 1 1 1 1 1 1 1 1 1 ...\n $ household_no           : int  21 680 290 3390 181 3501 1401 2330 3750 2371 ...\n $ household_head_age     : int  50 35 60 35 40 40 60 23 25 40 ...\n $ household_head_sex     : int  2 2 2 2 2 2 2 2 2 3 ...\n $ household_head_religion: int  4 4 4 4 4 4 4 4 4 4 ...\n $ household_head_caste   : int  9 9 9 9 9 9 9 9 9 9 ...\n $ household_head_subcaste: chr  \"PASWAN\" \"PASWAN\" \"PASWAN\" \"PASWAN\" ...\n\nQuest1_assets4_animals <-  merge(Quest1_assets4, animals, all=TRUE, by = \"FSN\")\nstr(Quest1_assets4_animals)\n\n'data.frame':   13377 obs. of  39 variables:\n $ FSN                    : int  45001 45002 45003 45004 45005 45006 45007 45008 45009 45010 ...\n $ asset_index            : chr  \"4\" \"3\" \"2\" \"1\" ...\n $ panchyat_id            : int  2 2 2 2 2 2 2 2 2 2 ...\n $ village_id             : int  11 11 11 11 11 11 11 11 11 11 ...\n $ ward_no                : int  1 1 1 1 1 1 1 1 1 1 ...\n $ household_no           : int  21 680 290 3390 181 3501 1401 2330 3750 2371 ...\n $ household_head_age     : int  50 35 60 35 40 40 60 23 25 40 ...\n $ household_head_sex     : int  2 2 2 2 2 2 2 2 2 3 ...\n $ household_head_religion: int  4 4 4 4 4 4 4 4 4 4 ...\n $ household_head_caste   : int  9 9 9 9 9 9 9 9 9 9 ...\n $ household_head_subcaste: chr  \"PASWAN\" \"PASWAN\" \"PASWAN\" \"PASWAN\" ...\n $ count_Goa              : num  3 0 0 2 NA 0 NA NA 7 NA ...\n $ dist_Goa               : int  5 NA NA 5 NA NA NA NA 0 NA ...\n $ indor_Goa              : num  1 0 0 1 NA 0 NA NA 1 NA ...\n $ daysin_Goa             : num  120 0 0 180 NA 0 NA NA 360 NA ...\n $ count_Pou              : num  1 0 0 0 NA 0 NA NA 0 NA ...\n $ dist_Pou               : int  0 NA NA NA NA NA NA NA NA NA ...\n $ indor_Pou              : num  1 0 0 0 NA 0 NA NA 0 NA ...\n $ daysin_Pou             : num  365 0 0 0 NA 0 NA NA 0 NA ...\n $ count_Buf              : num  0 1 0 0 NA 0 NA NA 0 NA ...\n $ dist_Buf               : int  NA 4 NA NA NA NA NA NA NA NA ...\n $ indor_Buf              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ daysin_Buf             : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ count_Cow              : num  0 0 1 0 NA 2 NA NA 0 NA ...\n $ dist_Cow               : int  NA NA 3 NA NA 0 NA NA NA NA ...\n $ indor_Cow              : num  0 0 1 0 NA 1 NA NA 0 NA ...\n $ daysin_Cow             : num  0 0 210 0 NA 360 NA NA 0 NA ...\n $ count_Pig              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ dist_Pig               : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Pig              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ daysin_Pig             : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ count_Dog              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ dist_Dog               : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Dog              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ daysin_Dog             : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ count_Oth              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ dist_Oth               : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Oth              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ daysin_Oth             : num  0 0 0 0 NA 0 NA NA 0 NA ...\n\n#View(Quest1_assets4_animals)\n\n3.1.4 Merging with Q1_B\n\nQ1_B <- read.csv(\"C:/Users/pined/OneDrive - Universidad Nacional Mayor de San Marcos/Javier 2022/Belgica/AC2_DataAnalysis_ThWk/Material/Q1_B.csv\", sep=\",\", dec= \".\")\nstr(Q1_B)\n\n'data.frame':   13377 obs. of  40 variables:\n $ ID                 : int  1 2 3 4 5 6 7 8 9 10 ...\n $ FSN                : num  45001 45002 45003 45004 45005 ...\n $ Neem_Tree          : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Neem_Tree_Distance : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Size     : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Age      : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Usage    : chr  \"\" \"\" \"\" \"\" ...\n $ Neem_Tree_Use_Other: chr  \"\" \"\" \"\" \"\" ...\n $ Bamboo_Tree        : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Bamboo_Tree_Dist   : num  3 10 16 17 5 4 15 3 1 10 ...\n $ Banana_Tree        : num  0 0 0 0 0 0 0 1 1 0 ...\n $ Banana_Tree_Dist   : num  -1 -1 -1 -1 -1 -1 -1 5 1 -1 ...\n $ Rice_Field         : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Rice_Field_Dist    : num  4 12 16 13 4 13 10 10 7 12 ...\n $ Perm_Water_Body    : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Perm_Wat_Body_Dist : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wat_Body_Mid_Point : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ No_Mosquito_Net    : num  0 2 1 0 0 0 0 0 1 0 ...\n $ Sprayed_2010       : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Sprayed_2009       : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Floor_Material     : num  153 153 153 153 153 153 153 153 155 153 ...\n $ Other_Floor_Mat    : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Is_Floor_Damp      : num  1 1 1 1 1 1 1 1 0 1 ...\n $ Roof_Material      : num  161 159 158 156 156 156 156 158 158 156 ...\n $ Other_Roof_Material: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wall_Material      : num  164 164 164 162 163 163 162 164 164 162 ...\n $ Other_Wall_Material: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Windows_in_Room    : num  1 1 1 0 0 0 0 1 1 0 ...\n $ Granaries_in_HH    : num  1 1 1 0 1 1 0 1 1 0 ...\n $ Source_Drink_Water : num  167 167 92 92 92 92 92 92 92 92 ...\n $ Other_Src_Drink_Wat: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Toilet_Facility    : num  177 177 177 177 177 177 177 177 177 177 ...\n $ Other_Toilet_Fac   : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Cooking_Fuel       : num  180 180 180 180 180 180 180 180 180 180 ...\n $ Other_Cooking_Fuel : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Source_Light       : num  182 182 182 182 182 182 182 182 182 182 ...\n $ Other_Source_Light : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Electricity_in_HH  : num  0 0 0 0 0 0 0 0 0 0 ...\n $ No_Of_Rooms        : num  2 2 3 1 2 3 2 1 3 1 ...\n $ No_Sleeping_Rooms  : num  2 2 2 1 2 2 2 1 1 1 ...\n\n#Merge\nQuest1_assets4_animals_q1B <-  merge(Q1_B, Quest1_assets4_animals, all=TRUE, by = \"FSN\")\nstr(Quest1_assets4_animals_q1B)\n\n'data.frame':   13377 obs. of  78 variables:\n $ FSN                    : num  45001 45002 45003 45004 45005 ...\n $ ID                     : int  1 2 3 4 5 6 7 8 9 10 ...\n $ Neem_Tree              : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Neem_Tree_Distance     : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Size         : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Age          : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Usage        : chr  \"\" \"\" \"\" \"\" ...\n $ Neem_Tree_Use_Other    : chr  \"\" \"\" \"\" \"\" ...\n $ Bamboo_Tree            : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Bamboo_Tree_Dist       : num  3 10 16 17 5 4 15 3 1 10 ...\n $ Banana_Tree            : num  0 0 0 0 0 0 0 1 1 0 ...\n $ Banana_Tree_Dist       : num  -1 -1 -1 -1 -1 -1 -1 5 1 -1 ...\n $ Rice_Field             : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Rice_Field_Dist        : num  4 12 16 13 4 13 10 10 7 12 ...\n $ Perm_Water_Body        : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Perm_Wat_Body_Dist     : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wat_Body_Mid_Point     : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ No_Mosquito_Net        : num  0 2 1 0 0 0 0 0 1 0 ...\n $ Sprayed_2010           : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Sprayed_2009           : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Floor_Material         : num  153 153 153 153 153 153 153 153 155 153 ...\n $ Other_Floor_Mat        : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Is_Floor_Damp          : num  1 1 1 1 1 1 1 1 0 1 ...\n $ Roof_Material          : num  161 159 158 156 156 156 156 158 158 156 ...\n $ Other_Roof_Material    : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wall_Material          : num  164 164 164 162 163 163 162 164 164 162 ...\n $ Other_Wall_Material    : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Windows_in_Room        : num  1 1 1 0 0 0 0 1 1 0 ...\n $ Granaries_in_HH        : num  1 1 1 0 1 1 0 1 1 0 ...\n $ Source_Drink_Water     : num  167 167 92 92 92 92 92 92 92 92 ...\n $ Other_Src_Drink_Wat    : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Toilet_Facility        : num  177 177 177 177 177 177 177 177 177 177 ...\n $ Other_Toilet_Fac       : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Cooking_Fuel           : num  180 180 180 180 180 180 180 180 180 180 ...\n $ Other_Cooking_Fuel     : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Source_Light           : num  182 182 182 182 182 182 182 182 182 182 ...\n $ Other_Source_Light     : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Electricity_in_HH      : num  0 0 0 0 0 0 0 0 0 0 ...\n $ No_Of_Rooms            : num  2 2 3 1 2 3 2 1 3 1 ...\n $ No_Sleeping_Rooms      : num  2 2 2 1 2 2 2 1 1 1 ...\n $ asset_index            : chr  \"4\" \"3\" \"2\" \"1\" ...\n $ panchyat_id            : int  2 2 2 2 2 2 2 2 2 2 ...\n $ village_id             : int  11 11 11 11 11 11 11 11 11 11 ...\n $ ward_no                : int  1 1 1 1 1 1 1 1 1 1 ...\n $ household_no           : int  21 680 290 3390 181 3501 1401 2330 3750 2371 ...\n $ household_head_age     : int  50 35 60 35 40 40 60 23 25 40 ...\n $ household_head_sex     : int  2 2 2 2 2 2 2 2 2 3 ...\n $ household_head_religion: int  4 4 4 4 4 4 4 4 4 4 ...\n $ household_head_caste   : int  9 9 9 9 9 9 9 9 9 9 ...\n $ household_head_subcaste: chr  \"PASWAN\" \"PASWAN\" \"PASWAN\" \"PASWAN\" ...\n $ count_Goa              : num  3 0 0 2 NA 0 NA NA 7 NA ...\n $ dist_Goa               : int  5 NA NA 5 NA NA NA NA 0 NA ...\n $ indor_Goa              : num  1 0 0 1 NA 0 NA NA 1 NA ...\n $ daysin_Goa             : num  120 0 0 180 NA 0 NA NA 360 NA ...\n $ count_Pou              : num  1 0 0 0 NA 0 NA NA 0 NA ...\n $ dist_Pou               : int  0 NA NA NA NA NA NA NA NA NA ...\n $ indor_Pou              : num  1 0 0 0 NA 0 NA NA 0 NA ...\n $ daysin_Pou             : num  365 0 0 0 NA 0 NA NA 0 NA ...\n $ count_Buf              : num  0 1 0 0 NA 0 NA NA 0 NA ...\n $ dist_Buf               : int  NA 4 NA NA NA NA NA NA NA NA ...\n $ indor_Buf              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ daysin_Buf             : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ count_Cow              : num  0 0 1 0 NA 2 NA NA 0 NA ...\n $ dist_Cow               : int  NA NA 3 NA NA 0 NA NA NA NA ...\n $ indor_Cow              : num  0 0 1 0 NA 1 NA NA 0 NA ...\n $ daysin_Cow             : num  0 0 210 0 NA 360 NA NA 0 NA ...\n $ count_Pig              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ dist_Pig               : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Pig              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ daysin_Pig             : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ count_Dog              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ dist_Dog               : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Dog              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ daysin_Dog             : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ count_Oth              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ dist_Oth               : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Oth              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ daysin_Oth             : num  0 0 0 0 NA 0 NA NA 0 NA ...\n\n\n3.1.5 Opening Q1_Screening.csv\n\nQ1_Screening <- read.csv(\"C:/Users/pined/OneDrive - Universidad Nacional Mayor de San Marcos/Javier 2022/Belgica/AC2_DataAnalysis_ThWk/Material/Q1_Screening.csv\", sep=\",\", dec= \".\")\nstr(Q1_Screening)\n\n'data.frame':   81214 obs. of  10 variables:\n $ FSN                         : int  45001 45001 45001 45001 45001 45001 45002 45002 45002 45002 ...\n $ member_id                   : int  1 2 3 4 5 6 1 2 3 4 ...\n $ member_age                  : int  50 48 25 22 0 11 35 33 17 15 ...\n $ member_sex                  : int  2 3 2 3 2 2 2 3 2 2 ...\n $ fever_gt_3_days             : int  0 0 0 0 0 0 0 0 0 0 ...\n $ suffered_vl_since_2nd_survey: int  0 0 0 0 0 0 0 0 0 0 ...\n $ date_diagnosis              : chr  \"\" \"\" \"\" \"\" ...\n $ treatment_place             : chr  \"-1\" \"-1\" \"-1\" \"-1\" ...\n $ current_status              : int  0 0 4 0 0 0 0 0 4 0 ...\n $ datedis                     : int  NA NA NA NA NA NA NA NA NA NA ...\n\n\n3.1.6 Merging with the merged database of households\n\nstr(Quest1_assets4_animals_q1B)\n\n'data.frame':   13377 obs. of  78 variables:\n $ FSN                    : num  45001 45002 45003 45004 45005 ...\n $ ID                     : int  1 2 3 4 5 6 7 8 9 10 ...\n $ Neem_Tree              : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Neem_Tree_Distance     : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Size         : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Age          : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Usage        : chr  \"\" \"\" \"\" \"\" ...\n $ Neem_Tree_Use_Other    : chr  \"\" \"\" \"\" \"\" ...\n $ Bamboo_Tree            : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Bamboo_Tree_Dist       : num  3 10 16 17 5 4 15 3 1 10 ...\n $ Banana_Tree            : num  0 0 0 0 0 0 0 1 1 0 ...\n $ Banana_Tree_Dist       : num  -1 -1 -1 -1 -1 -1 -1 5 1 -1 ...\n $ Rice_Field             : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Rice_Field_Dist        : num  4 12 16 13 4 13 10 10 7 12 ...\n $ Perm_Water_Body        : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Perm_Wat_Body_Dist     : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wat_Body_Mid_Point     : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ No_Mosquito_Net        : num  0 2 1 0 0 0 0 0 1 0 ...\n $ Sprayed_2010           : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Sprayed_2009           : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Floor_Material         : num  153 153 153 153 153 153 153 153 155 153 ...\n $ Other_Floor_Mat        : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Is_Floor_Damp          : num  1 1 1 1 1 1 1 1 0 1 ...\n $ Roof_Material          : num  161 159 158 156 156 156 156 158 158 156 ...\n $ Other_Roof_Material    : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wall_Material          : num  164 164 164 162 163 163 162 164 164 162 ...\n $ Other_Wall_Material    : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Windows_in_Room        : num  1 1 1 0 0 0 0 1 1 0 ...\n $ Granaries_in_HH        : num  1 1 1 0 1 1 0 1 1 0 ...\n $ Source_Drink_Water     : num  167 167 92 92 92 92 92 92 92 92 ...\n $ Other_Src_Drink_Wat    : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Toilet_Facility        : num  177 177 177 177 177 177 177 177 177 177 ...\n $ Other_Toilet_Fac       : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Cooking_Fuel           : num  180 180 180 180 180 180 180 180 180 180 ...\n $ Other_Cooking_Fuel     : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Source_Light           : num  182 182 182 182 182 182 182 182 182 182 ...\n $ Other_Source_Light     : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Electricity_in_HH      : num  0 0 0 0 0 0 0 0 0 0 ...\n $ No_Of_Rooms            : num  2 2 3 1 2 3 2 1 3 1 ...\n $ No_Sleeping_Rooms      : num  2 2 2 1 2 2 2 1 1 1 ...\n $ asset_index            : chr  \"4\" \"3\" \"2\" \"1\" ...\n $ panchyat_id            : int  2 2 2 2 2 2 2 2 2 2 ...\n $ village_id             : int  11 11 11 11 11 11 11 11 11 11 ...\n $ ward_no                : int  1 1 1 1 1 1 1 1 1 1 ...\n $ household_no           : int  21 680 290 3390 181 3501 1401 2330 3750 2371 ...\n $ household_head_age     : int  50 35 60 35 40 40 60 23 25 40 ...\n $ household_head_sex     : int  2 2 2 2 2 2 2 2 2 3 ...\n $ household_head_religion: int  4 4 4 4 4 4 4 4 4 4 ...\n $ household_head_caste   : int  9 9 9 9 9 9 9 9 9 9 ...\n $ household_head_subcaste: chr  \"PASWAN\" \"PASWAN\" \"PASWAN\" \"PASWAN\" ...\n $ count_Goa              : num  3 0 0 2 NA 0 NA NA 7 NA ...\n $ dist_Goa               : int  5 NA NA 5 NA NA NA NA 0 NA ...\n $ indor_Goa              : num  1 0 0 1 NA 0 NA NA 1 NA ...\n $ daysin_Goa             : num  120 0 0 180 NA 0 NA NA 360 NA ...\n $ count_Pou              : num  1 0 0 0 NA 0 NA NA 0 NA ...\n $ dist_Pou               : int  0 NA NA NA NA NA NA NA NA NA ...\n $ indor_Pou              : num  1 0 0 0 NA 0 NA NA 0 NA ...\n $ daysin_Pou             : num  365 0 0 0 NA 0 NA NA 0 NA ...\n $ count_Buf              : num  0 1 0 0 NA 0 NA NA 0 NA ...\n $ dist_Buf               : int  NA 4 NA NA NA NA NA NA NA NA ...\n $ indor_Buf              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ daysin_Buf             : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ count_Cow              : num  0 0 1 0 NA 2 NA NA 0 NA ...\n $ dist_Cow               : int  NA NA 3 NA NA 0 NA NA NA NA ...\n $ indor_Cow              : num  0 0 1 0 NA 1 NA NA 0 NA ...\n $ daysin_Cow             : num  0 0 210 0 NA 360 NA NA 0 NA ...\n $ count_Pig              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ dist_Pig               : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Pig              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ daysin_Pig             : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ count_Dog              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ dist_Dog               : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Dog              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ daysin_Dog             : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ count_Oth              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ dist_Oth               : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Oth              : num  0 0 0 0 NA 0 NA NA 0 NA ...\n $ daysin_Oth             : num  0 0 0 0 NA 0 NA NA 0 NA ...\n\nstr(Q1_Screening)\n\n'data.frame':   81214 obs. of  10 variables:\n $ FSN                         : int  45001 45001 45001 45001 45001 45001 45002 45002 45002 45002 ...\n $ member_id                   : int  1 2 3 4 5 6 1 2 3 4 ...\n $ member_age                  : int  50 48 25 22 0 11 35 33 17 15 ...\n $ member_sex                  : int  2 3 2 3 2 2 2 3 2 2 ...\n $ fever_gt_3_days             : int  0 0 0 0 0 0 0 0 0 0 ...\n $ suffered_vl_since_2nd_survey: int  0 0 0 0 0 0 0 0 0 0 ...\n $ date_diagnosis              : chr  \"\" \"\" \"\" \"\" ...\n $ treatment_place             : chr  \"-1\" \"-1\" \"-1\" \"-1\" ...\n $ current_status              : int  0 0 4 0 0 0 0 0 4 0 ...\n $ datedis                     : int  NA NA NA NA NA NA NA NA NA NA ...\n\n#Merge\nQuest1_assets4_animals_q1B_Persons <-  merge(Q1_Screening, Quest1_assets4_animals_q1B, all=TRUE, by = \"FSN\")\nstr(Quest1_assets4_animals_q1B_Persons)\n\n'data.frame':   81214 obs. of  87 variables:\n $ FSN                         : int  45001 45001 45001 45001 45001 45001 45002 45002 45002 45002 ...\n $ member_id                   : int  1 2 3 4 5 6 1 2 3 4 ...\n $ member_age                  : int  50 48 25 22 0 11 35 33 17 15 ...\n $ member_sex                  : int  2 3 2 3 2 2 2 3 2 2 ...\n $ fever_gt_3_days             : int  0 0 0 0 0 0 0 0 0 0 ...\n $ suffered_vl_since_2nd_survey: int  0 0 0 0 0 0 0 0 0 0 ...\n $ date_diagnosis              : chr  \"\" \"\" \"\" \"\" ...\n $ treatment_place             : chr  \"-1\" \"-1\" \"-1\" \"-1\" ...\n $ current_status              : int  0 0 4 0 0 0 0 0 4 0 ...\n $ datedis                     : int  NA NA NA NA NA NA NA NA NA NA ...\n $ ID                          : int  1 1 1 1 1 1 2 2 2 2 ...\n $ Neem_Tree                   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Neem_Tree_Distance          : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Size              : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Age               : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Usage             : chr  \"\" \"\" \"\" \"\" ...\n $ Neem_Tree_Use_Other         : chr  \"\" \"\" \"\" \"\" ...\n $ Bamboo_Tree                 : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Bamboo_Tree_Dist            : num  3 3 3 3 3 3 10 10 10 10 ...\n $ Banana_Tree                 : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Banana_Tree_Dist            : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Rice_Field                  : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Rice_Field_Dist             : num  4 4 4 4 4 4 12 12 12 12 ...\n $ Perm_Water_Body             : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Perm_Wat_Body_Dist          : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wat_Body_Mid_Point          : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ No_Mosquito_Net             : num  0 0 0 0 0 0 2 2 2 2 ...\n $ Sprayed_2010                : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Sprayed_2009                : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Floor_Material              : num  153 153 153 153 153 153 153 153 153 153 ...\n $ Other_Floor_Mat             : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Is_Floor_Damp               : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Roof_Material               : num  161 161 161 161 161 161 159 159 159 159 ...\n $ Other_Roof_Material         : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wall_Material               : num  164 164 164 164 164 164 164 164 164 164 ...\n $ Other_Wall_Material         : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Windows_in_Room             : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Granaries_in_HH             : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Source_Drink_Water          : num  167 167 167 167 167 167 167 167 167 167 ...\n $ Other_Src_Drink_Wat         : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Toilet_Facility             : num  177 177 177 177 177 177 177 177 177 177 ...\n $ Other_Toilet_Fac            : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Cooking_Fuel                : num  180 180 180 180 180 180 180 180 180 180 ...\n $ Other_Cooking_Fuel          : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Source_Light                : num  182 182 182 182 182 182 182 182 182 182 ...\n $ Other_Source_Light          : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Electricity_in_HH           : num  0 0 0 0 0 0 0 0 0 0 ...\n $ No_Of_Rooms                 : num  2 2 2 2 2 2 2 2 2 2 ...\n $ No_Sleeping_Rooms           : num  2 2 2 2 2 2 2 2 2 2 ...\n $ asset_index                 : chr  \"4\" \"4\" \"4\" \"4\" ...\n $ panchyat_id                 : int  2 2 2 2 2 2 2 2 2 2 ...\n $ village_id                  : int  11 11 11 11 11 11 11 11 11 11 ...\n $ ward_no                     : int  1 1 1 1 1 1 1 1 1 1 ...\n $ household_no                : int  21 21 21 21 21 21 680 680 680 680 ...\n $ household_head_age          : int  50 50 50 50 50 50 35 35 35 35 ...\n $ household_head_sex          : int  2 2 2 2 2 2 2 2 2 2 ...\n $ household_head_religion     : int  4 4 4 4 4 4 4 4 4 4 ...\n $ household_head_caste        : int  9 9 9 9 9 9 9 9 9 9 ...\n $ household_head_subcaste     : chr  \"PASWAN\" \"PASWAN\" \"PASWAN\" \"PASWAN\" ...\n $ count_Goa                   : num  3 3 3 3 3 3 0 0 0 0 ...\n $ dist_Goa                    : int  5 5 5 5 5 5 NA NA NA NA ...\n $ indor_Goa                   : num  1 1 1 1 1 1 0 0 0 0 ...\n $ daysin_Goa                  : num  120 120 120 120 120 120 0 0 0 0 ...\n $ count_Pou                   : num  1 1 1 1 1 1 0 0 0 0 ...\n $ dist_Pou                    : int  0 0 0 0 0 0 NA NA NA NA ...\n $ indor_Pou                   : num  1 1 1 1 1 1 0 0 0 0 ...\n $ daysin_Pou                  : num  365 365 365 365 365 365 0 0 0 0 ...\n $ count_Buf                   : num  0 0 0 0 0 0 1 1 1 1 ...\n $ dist_Buf                    : int  NA NA NA NA NA NA 4 4 4 4 ...\n $ indor_Buf                   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ daysin_Buf                  : num  0 0 0 0 0 0 0 0 0 0 ...\n $ count_Cow                   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ dist_Cow                    : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Cow                   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ daysin_Cow                  : num  0 0 0 0 0 0 0 0 0 0 ...\n $ count_Pig                   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ dist_Pig                    : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Pig                   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ daysin_Pig                  : num  0 0 0 0 0 0 0 0 0 0 ...\n $ count_Dog                   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ dist_Dog                    : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Dog                   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ daysin_Dog                  : num  0 0 0 0 0 0 0 0 0 0 ...\n $ count_Oth                   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ dist_Oth                    : int  NA NA NA NA NA NA NA NA NA NA ...\n $ indor_Oth                   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ daysin_Oth                  : num  0 0 0 0 0 0 0 0 0 0 ...\n\n\n3.2. Select variables of interest\nFor the final dataset\n\nfinal_dataset  <- subset(Quest1_assets4_animals_q1B_Persons, select=c(\n  FSN, asset_index, Bamboo_Tree, Banana_Tree, Cooking_Fuel, Floor_Material, Granaries_in_HH, household_head_subcaste, indor_Buf, indor_Cow, indor_Pou, indor_Goa, count_Cow, count_Buf, count_Goa, count_Pou, Is_Floor_Damp, member_age, member_sex, Neem_Tree, No_Mosquito_Net, Perm_Water_Body, Rice_Field, Roof_Material, Sprayed_2009, Sprayed_2010, suffered_vl_since_2nd_survey, Wall_Material, Windows_in_Room\n))\n\nstr(final_dataset)\n\n'data.frame':   81214 obs. of  29 variables:\n $ FSN                         : int  45001 45001 45001 45001 45001 45001 45002 45002 45002 45002 ...\n $ asset_index                 : chr  \"4\" \"4\" \"4\" \"4\" ...\n $ Bamboo_Tree                 : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Banana_Tree                 : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Cooking_Fuel                : num  180 180 180 180 180 180 180 180 180 180 ...\n $ Floor_Material              : num  153 153 153 153 153 153 153 153 153 153 ...\n $ Granaries_in_HH             : num  1 1 1 1 1 1 1 1 1 1 ...\n $ household_head_subcaste     : chr  \"PASWAN\" \"PASWAN\" \"PASWAN\" \"PASWAN\" ...\n $ indor_Buf                   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ indor_Cow                   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ indor_Pou                   : num  1 1 1 1 1 1 0 0 0 0 ...\n $ indor_Goa                   : num  1 1 1 1 1 1 0 0 0 0 ...\n $ count_Cow                   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ count_Buf                   : num  0 0 0 0 0 0 1 1 1 1 ...\n $ count_Goa                   : num  3 3 3 3 3 3 0 0 0 0 ...\n $ count_Pou                   : num  1 1 1 1 1 1 0 0 0 0 ...\n $ Is_Floor_Damp               : num  1 1 1 1 1 1 1 1 1 1 ...\n $ member_age                  : int  50 48 25 22 0 11 35 33 17 15 ...\n $ member_sex                  : int  2 3 2 3 2 2 2 3 2 2 ...\n $ Neem_Tree                   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ No_Mosquito_Net             : num  0 0 0 0 0 0 2 2 2 2 ...\n $ Perm_Water_Body             : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Rice_Field                  : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Roof_Material               : num  161 161 161 161 161 161 159 159 159 159 ...\n $ Sprayed_2009                : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Sprayed_2010                : num  86 86 86 86 86 86 86 86 86 86 ...\n $ suffered_vl_since_2nd_survey: int  0 0 0 0 0 0 0 0 0 0 ...\n $ Wall_Material               : num  164 164 164 164 164 164 164 164 164 164 ...\n $ Windows_in_Room             : num  1 1 1 1 1 1 1 1 1 1 ...\n\n\nWe are going to save this final data set\n\nsaveRDS(final_dataset, \"final_dataset.RDS\")"
  },
  {
    "objectID": "Data Analysis Wk3.html",
    "href": "Data Analysis Wk3.html",
    "title": "Data Analysis",
    "section": "",
    "text": "Analysis\nInstalling packages\n\n#install.packages(\"epiR\")\nlibrary(epiR)\n\nWarning: package 'epiR' was built under R version 4.2.2\n\n\nLoading required package: survival\n\n\nPackage epiR 2.0.57 is loaded\n\n\nType help(epi.about) for summary information\n\n\nType browseVignettes(package = 'epiR') to learn how to use epiR for applied epidemiological analyses\n\n\n\n\n\nNow we will try to make a multivariate analysis\n\nfinal_dataset = readRDS(\"final_dataset.RDS\")\nfinal_dataset$case <- final_dataset$suffered_vl_since_2nd_survey\n\nBrickwall is different to fench wall\nMushahar caste\n\ntable(final_dataset$household_head_subcaste)\n\n\n                       AHIR        ANSARI        BADHAI         BANIA \n            4            18          7109             5             5 \n       BANIYA         BARAI         BHATT      BHUMIHAR      BRAHAMAN \n         2178             7            55          8457          1513 \n       CHAMAR    CHOURASIYA         DHOBI       DHUNIYA          DOME \n         5090           206          1273           570            54 \n       DUSADH        DUSHAD         FAKIR        GARERI        HAJJAM \n          195            15           260           395          1968 \n       IDRISI        JULAHA         KAHAR     KANAUJIYA          KANU \n           53           102           579            68           193 \n     KAYASTHA          KHAN         KOIRI        KUMHAR       KURESHI \n          327           159          1085          1873            36 \n        KURMI        LAHERI         LOHAR         MAHTO          MALI \n         4059             6          2423             5           132 \n       MALLAH      MANSOORI       MANSURI    MIR SHIKAR     MIRSHIKAR \n         1734          1913             1           125             2 \n     MUSHAHAR  MUSLIM DHOBI           NAI         NONIA        NONIYA \n         1980            55            33             7          5978 \n         PASI        PASWAN          RAIN        RAJPUT SABAZI FAROSH \n          172          4748          2242          2009           425 \n          SAH         SAIAD         SAYIN          SHAH        SHEIKH \n          121            85            43           143          9203 \n        SHEKH         SONAR          SUDI         SUNNI        TAMOLI \n           32           599             4            11            29 \n       TATAWA         TATMA         TATWA          TELI        TIWARI \n         1045            10             7          4027             2 \n        YADAV \n         3952 \n\n\nWe’ll make an additional factors, ‘mushahar’ based on ‘household_head_subcaste’=“MUSHAHAR”\n\nfinal_dataset$mushahar <- ifelse(final_dataset$household_head_subcaste == \"MUSHAHAR\", TRUE, FALSE)\ntable(final_dataset$household_head_subcaste, final_dataset$mushahar)\n\n               \n                FALSE TRUE\n                    4    0\n  AHIR             18    0\n  ANSARI         7109    0\n  BADHAI            5    0\n  BANIA             5    0\n  BANIYA         2178    0\n  BARAI             7    0\n  BHATT            55    0\n  BHUMIHAR       8457    0\n  BRAHAMAN       1513    0\n  CHAMAR         5090    0\n  CHOURASIYA      206    0\n  DHOBI          1273    0\n  DHUNIYA         570    0\n  DOME             54    0\n  DUSADH          195    0\n  DUSHAD           15    0\n  FAKIR           260    0\n  GARERI          395    0\n  HAJJAM         1968    0\n  IDRISI           53    0\n  JULAHA          102    0\n  KAHAR           579    0\n  KANAUJIYA        68    0\n  KANU            193    0\n  KAYASTHA        327    0\n  KHAN            159    0\n  KOIRI          1085    0\n  KUMHAR         1873    0\n  KURESHI          36    0\n  KURMI          4059    0\n  LAHERI            6    0\n  LOHAR          2423    0\n  MAHTO             5    0\n  MALI            132    0\n  MALLAH         1734    0\n  MANSOORI       1913    0\n  MANSURI           1    0\n  MIR SHIKAR      125    0\n  MIRSHIKAR         2    0\n  MUSHAHAR          0 1980\n  MUSLIM DHOBI     55    0\n  NAI              33    0\n  NONIA             7    0\n  NONIYA         5978    0\n  PASI            172    0\n  PASWAN         4748    0\n  RAIN           2242    0\n  RAJPUT         2009    0\n  SABAZI FAROSH   425    0\n  SAH             121    0\n  SAIAD            85    0\n  SAYIN            43    0\n  SHAH            143    0\n  SHEIKH         9203    0\n  SHEKH            32    0\n  SONAR           599    0\n  SUDI              4    0\n  SUNNI            11    0\n  TAMOLI           29    0\n  TATAWA         1045    0\n  TATMA            10    0\n  TATWA             7    0\n  TELI           4027    0\n  TIWARI            2    0\n  YADAV          3952    0\n\n\nNumber of people living in each household\nFirst I create a variable ‘hh_size’ which is the number of rows per FSN:\n\nfinal_dataset$hh_size <- ave(final_dataset$FSN, final_dataset$FSN, FUN = length)\n#Calculate the\n\nuse summaries to see that you have a variable hh_size ranging from 1 to 35\n\nsummary(final_dataset$hh_size)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.000   5.000   7.000   7.638   9.000  35.000 \n\n\nI also create a variable ‘large_hh’ based on ‘hh_size’\n\nfinal_dataset$large_hh <- ifelse(final_dataset$hh_size > 7, TRUE, FALSE)\n\nNow compute a new variable net 3 which is\nNo_Mosquito_Net/hh_size. Then recode it, lo:0.333 = FALSE, 0.333:hi = TRUE\n\nfinal_dataset$net3 <- final_dataset$No_Mosquito_Net / final_dataset$hh_size\n\nbednet per three person, otherwise FALSE\n\nfinal_dataset$net3 <- final_dataset$net3 >= 0.333\ntable(final_dataset$net3)\n\n\nFALSE  TRUE \n62676 18538 \n\n\nCheck with cc whether net3 and mushahar are associated with case (bivariate)\n\nLR_Model3 <- glm(case ~ net3, family=binomial, data=final_dataset)\nsummary(LR_Model3)\n\n\nCall:\nglm(formula = case ~ net3, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.0767  -0.0767  -0.0767  -0.0767   3.6584  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -5.82786    0.07383 -78.937  < 2e-16 ***\nnet3TRUE    -0.86298    0.22132  -3.899 9.65e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2867.0  on 81212  degrees of freedom\nAIC: 2871\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(LR_Model3))\n\n(Intercept)    net3TRUE \n0.002944377 0.421901162 \n\nexp(confint(LR_Model3))\n\nWaiting for profiling to be done...\n\n\n                  2.5 %      97.5 %\n(Intercept) 0.002538656 0.003391284\nnet3TRUE    0.266266770 0.636608766\n\nLR_Model4 <- glm(case ~ mushahar, family=binomial, data=final_dataset)\nsummary(LR_Model4)\n\n\nCall:\nglm(formula = case ~ mushahar, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.1805  -0.0665  -0.0665  -0.0665   3.4972  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -6.11316    0.07568  -80.78   <2e-16 ***\nmushaharTRUE  2.00434    0.19362   10.35   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2817.5  on 81212  degrees of freedom\nAIC: 2821.5\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(LR_Model4))\n\n (Intercept) mushaharTRUE \n 0.002213537  7.421202699 \n\nround(exp(confint(LR_Model3)),2)\n\nWaiting for profiling to be done...\n\n\n            2.5 % 97.5 %\n(Intercept)  0.00   0.00\nnet3TRUE     0.27   0.64\n\n\nNow make a factor ‘riskwall’ with three levels: thatched wall, unplastered brick wall and plastered brick wall.\ncheck association with case\n2 =brick 1 = 3 =\n\nfinal_dataset$risk_wall <- ifelse(\n  final_dataset$Wall_Material %in% c(6,164,166), 2, ifelse(\n    final_dataset$Wall_Material %in% 162:163, 1, ifelse(\n      final_dataset$Wall_Material == 165, 3, NA)))\n\nfinal_dataset$risk_wall <- as.factor(final_dataset$risk_wall)\n\nOwnership of animals\n\nfinal_dataset$own_buf <- ifelse(final_dataset$count_Buf > 0, TRUE, FALSE)\nfinal_dataset$own_cow <- ifelse(final_dataset$count_Cow > 0, TRUE, FALSE)\nfinal_dataset$own_Goa <- ifelse(final_dataset$count_Goa > 0, TRUE, FALSE)\nfinal_dataset$own_Pou <- ifelse(final_dataset$count_Pou > 0, TRUE, FALSE)\n\nHere I create a variable age group\n\nfinal_dataset$agegrp <- cut(final_dataset$member_age, breaks=c(0,9,19,29,39,100))\n\nand a variable ‘female’\n\nfinal_dataset$female <- ifelse(final_dataset$member_sex ==3, TRUE, FALSE)\n\nand a variable Damp_floor\n\ntable(final_dataset$Is_Floor_Damp)\n\n\n    0     1    32 \n 8499 72711     4 \n\nfinal_dataset$Damp_floor <- ifelse(final_dataset$Is_Floor_Damp == 1, TRUE, FALSE)\n\nRecoding to binary the varaibles Sprayed_20**\n\ntable(final_dataset$Sprayed_2009)\n\n\n   86    87    88 \n71286  9921     7 \n\ntable(final_dataset$Sprayed_2010)\n\n\n   86    87    88 \n66776 14409    29 \n\nfinal_dataset$IRS_09 <- ifelse(final_dataset$Sprayed_2009 > 86, TRUE, FALSE)\nfinal_dataset$IRS_10 <- ifelse(final_dataset$Sprayed_2010 > 86, TRUE, FALSE)\n\n#Analysis\nInputs for my table on the study population:\n\ntable(final_dataset$agegrp)\n\n\n   (0,9]   (9,19]  (19,29]  (29,39] (39,100] \n   19447    17803    12098     9925    17540 \n\ntable(final_dataset$large_hh)\n\n\nFALSE  TRUE \n48783 32431 \n\ntable(final_dataset$asset_index)\n\n\n    1     2     3     4     5 \n15410 12934 15813 17312 19745 \n\ntable(final_dataset$Bamboo_Tree)\n\n\n    0     1 \n49659 31555 \n\ntable(final_dataset$Banana_Tree)\n\n\n    0     1 \n11465 69749 \n\ntable(final_dataset$case)\n\n\n    0     1 \n81007   207 \n\ntable(final_dataset$indoor_Buf)\n\n< table of extent 0 >\n\ntable(final_dataset$indoor_Cow)\n\n< table of extent 0 >\n\ntable(final_dataset$indoor_Goa)\n\n< table of extent 0 >\n\ntable(final_dataset$Is_Floor_Damp)\n\n\n    0     1    32 \n 8499 72711     4 \n\ntable(final_dataset$mushahar)\n\n\nFALSE  TRUE \n79234  1980 \n\ntable(final_dataset$Neem_Tree)\n\n\n    0     1 \n47378 33836 \n\ntable(final_dataset$net3)\n\n\nFALSE  TRUE \n62676 18538 \n\ntable(final_dataset$own_bov)\n\n< table of extent 0 >\n\ntable(final_dataset$Perm_Water_Body)\n\n\n    0     1 \n41962 39252 \n\ntable(final_dataset$Rice_Field)\n\n\n    0     1 \n16637 64577 \n\ntable(final_dataset$risk_wall)\n\n\n    1     2     3 \n26627 35412 19175 \n\ntable(final_dataset$Sprayed_2009)\n\n\n   86    87    88 \n71286  9921     7 \n\ntable(final_dataset$Sprayed_2010)\n\n\n   86    87    88 \n66776 14409    29 \n\ntable(final_dataset$female)\n\n\nFALSE  TRUE \n42423 38791 \n\ntable(final_dataset$own_buf)\n\n\nFALSE  TRUE \n37183 11017 \n\ntable(final_dataset$own_cow)\n\n\nFALSE  TRUE \n26794 21406 \n\ntable(final_dataset$own_Goa)\n\n\nFALSE  TRUE \n22504 25696 \n\ntable(final_dataset$own_Pou)\n\n\nFALSE  TRUE \n44707  3493 \n\ntable(final_dataset$Damp_floor)\n\n\nFALSE  TRUE \n 8503 72711 \n\n\ncalculate OR for exposure females\n\nLR_Model5 <- glm(case ~ female, family=binomial, data=final_dataset)\nsummary(LR_Model5)\n\n\nCall:\nglm(formula = case ~ female, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.0727  -0.0727  -0.0727  -0.0700   3.4676  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -5.93430    0.09461 -62.726   <2e-16 ***\nfemaleTRUE  -0.07531    0.13964  -0.539     0.59    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2885.6  on 81212  degrees of freedom\nAIC: 2889.6\n\nNumber of Fisher Scoring iterations: 8\n\nexp(coef(LR_Model5))\n\n(Intercept)  femaleTRUE \n0.002647066 0.927454928 \n\n\ncalculate OR for exposure large_hh\n\nLR_Model5a <- glm(case ~ large_hh, family=binomial, data=final_dataset)\nsummary(LR_Model5a)\n\n\nCall:\nglm(formula = case ~ large_hh, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.0724  -0.0724  -0.0708  -0.0708   3.4615  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -5.98861    0.09064 -66.073   <2e-16 ***\nlarge_hhTRUE  0.04702    0.14145   0.332     0.74    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2885.8  on 81212  degrees of freedom\nAIC: 2889.8\n\nNumber of Fisher Scoring iterations: 8\n\nexp(coef(LR_Model5a))\n\n (Intercept) large_hhTRUE \n 0.002507141  1.048140576 \n\n\ncalculate OR for exposure age group\n\nLR_Model6 <- glm(case ~ agegrp, family=binomial, data=final_dataset)\nsummary(LR_Model6)\n\n\nCall:\nglm(formula = case ~ agegrp, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.0779  -0.0772  -0.0732  -0.0696   3.4810  \n\nCoefficients:\n               Estimate Std. Error z value Pr(>|z|)    \n(Intercept)     -5.9215     0.1388 -42.648   <2e-16 ***\nagegrp(9,19]     0.1264     0.1946   0.650    0.516    \nagegrp(19,29]    0.1072     0.2171   0.494    0.621    \nagegrp(29,39]   -0.1008     0.2470  -0.408    0.683    \nagegrp(39,100]  -0.1348     0.2091  -0.645    0.519    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2862.8  on 76812  degrees of freedom\nResidual deviance: 2860.6  on 76808  degrees of freedom\n  (4401 observations deleted due to missingness)\nAIC: 2870.6\n\nNumber of Fisher Scoring iterations: 8\n\nexp(coef(LR_Model6))\n\n   (Intercept)   agegrp(9,19]  agegrp(19,29]  agegrp(29,39] agegrp(39,100] \n   0.002681103    1.134765971    1.113190806    0.904104524    0.873890667 \n\n\ncalculate OR for exposure Mushahar caste\n\nLR_Model7 <- glm(case ~ mushahar, family=binomial, data=final_dataset)\nsummary(LR_Model7)\n\n\nCall:\nglm(formula = case ~ mushahar, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.1805  -0.0665  -0.0665  -0.0665   3.4972  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -6.11316    0.07568  -80.78   <2e-16 ***\nmushaharTRUE  2.00434    0.19362   10.35   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2817.5  on 81212  degrees of freedom\nAIC: 2821.5\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(LR_Model7))\n\n (Intercept) mushaharTRUE \n 0.002213537  7.421202699 \n\n\ncalculate OR for exposure Risk_wall caste\n\nLR_Model8 <- glm(case ~ factor(risk_wall), family=binomial, data=final_dataset)\nsummary(LR_Model8)\n\n\nCall:\nglm(formula = case ~ factor(risk_wall), family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.0850  -0.0850  -0.0737  -0.0737   3.7824  \n\nCoefficients:\n                   Estimate Std. Error z value Pr(>|z|)    \n(Intercept)         -5.6217     0.1022 -54.982  < 2e-16 ***\nfactor(risk_wall)2  -0.2860     0.1446  -1.978   0.0479 *  \nfactor(risk_wall)3  -1.5308     0.2777  -5.512 3.54e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2842.9  on 81211  degrees of freedom\nAIC: 2848.9\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(LR_Model8))\n\n       (Intercept) factor(risk_wall)2 factor(risk_wall)3 \n       0.003618409        0.751245894        0.216360649 \n\n\ncalculate OR for exposure damp floor\n\nLR_Model9 <- glm(case ~ Damp_floor, family=binomial, data=final_dataset)\nsummary(LR_Model9)\n\n\nCall:\nglm(formula = case ~ Damp_floor, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.0742  -0.0742  -0.0742  -0.0742   3.7689  \n\nCoefficients:\n               Estimate Std. Error z value Pr(>|z|)    \n(Intercept)     -7.1014     0.3780 -18.786  < 2e-16 ***\nDamp_floorTRUE   1.2083     0.3846   3.142  0.00168 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2871.2  on 81212  degrees of freedom\nAIC: 2875.2\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(LR_Model9))\n\n   (Intercept) Damp_floorTRUE \n  0.0008239173   3.3476688328 \n\n\ncalculate OR for exposure sprayed (IRS)\n\nLR_Model10 <- glm(case ~ IRS_09, family=binomial, data=final_dataset)\nsummary(LR_Model10)\n\n\nCall:\nglm(formula = case ~ IRS_09, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.0953  -0.0675  -0.0675  -0.0675   3.4891  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -6.08458    0.07866 -77.356  < 2e-16 ***\nIRS_09TRUE   0.69267    0.16885   4.102 4.09e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2871.3  on 81212  degrees of freedom\nAIC: 2875.3\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(LR_Model10))\n\n(Intercept)  IRS_09TRUE \n0.002277712 1.999055617 \n\nLR_Model10 <- glm(case ~ IRS_10, family=binomial, data=final_dataset)\nsummary(LR_Model10)\n\n\nCall:\nglm(formula = case ~ IRS_10, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.1041  -0.0622  -0.0622  -0.0622   3.5353  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -6.24735    0.08813 -70.888   <2e-16 ***\nIRS_10TRUE   1.03186    0.14373   7.179    7e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2840.1  on 81212  degrees of freedom\nAIC: 2844.1\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(LR_Model10))\n\n(Intercept)  IRS_10TRUE \n0.001935571 2.806280365 \n\n\ncalculate OR for exposure bednet\n\nLR_Model11 <- glm(case ~ net3, family=binomial, data=final_dataset)\nsummary(LR_Model11)\n\n\nCall:\nglm(formula = case ~ net3, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.0767  -0.0767  -0.0767  -0.0767   3.6584  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -5.82786    0.07383 -78.937  < 2e-16 ***\nnet3TRUE    -0.86298    0.22132  -3.899 9.65e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2867.0  on 81212  degrees of freedom\nAIC: 2871\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(LR_Model11))\n\n(Intercept)    net3TRUE \n0.002944377 0.421901162 \n\n\ncalculate OR for exposure ownership of animals\n\nLR_Model12 <- glm(case ~ own_Goa, family=binomial, data=final_dataset)\nsummary(LR_Model12)\n\n\nCall:\nglm(formula = case ~ own_Goa, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.0819  -0.0819  -0.0819  -0.0667   3.4955  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -6.1072     0.1415 -43.149   <2e-16 ***\nown_GoaTRUE   0.4108     0.1780   2.307    0.021 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1868.4  on 48199  degrees of freedom\nResidual deviance: 1862.9  on 48198  degrees of freedom\n  (33014 observations deleted due to missingness)\nAIC: 1866.9\n\nNumber of Fisher Scoring iterations: 8\n\nexp(coef(LR_Model12))\n\n(Intercept) own_GoaTRUE \n0.002226775 1.508038778 \n\nLR_Model13 <- glm(case ~ own_cow, family=binomial, data=final_dataset)\nsummary(LR_Model13)\n\n\nCall:\nglm(formula = case ~ own_cow, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.0820  -0.0820  -0.0820  -0.0656   3.5051  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -5.6928     0.1056 -53.915   <2e-16 ***\nown_cowTRUE  -0.4479     0.1815  -2.468   0.0136 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1868.4  on 48199  degrees of freedom\nResidual deviance: 1862.0  on 48198  degrees of freedom\n  (33014 observations deleted due to missingness)\nAIC: 1866\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(LR_Model13))\n\n(Intercept) own_cowTRUE \n0.003370282 0.638984603 \n\nLR_Model14 <- glm(case ~ own_buf, family=binomial, data=final_dataset)\nsummary(LR_Model14)\n\n\nCall:\nglm(formula = case ~ own_buf, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n   Min      1Q  Median      3Q     Max  \n-0.082  -0.073  -0.073  -0.073   3.443  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -5.9258     0.1006 -58.889   <2e-16 ***\nown_bufTRUE   0.2329     0.1930   1.207    0.227    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1868.4  on 48199  degrees of freedom\nResidual deviance: 1867.0  on 48198  degrees of freedom\n  (33014 observations deleted due to missingness)\nAIC: 1871\n\nNumber of Fisher Scoring iterations: 8\n\nexp(coef(LR_Model14))\n\n(Intercept) own_bufTRUE \n0.002669615 1.262265619 \n\nLR_Model15 <- glm(case ~ own_Pou, family=binomial, data=final_dataset)\nsummary(LR_Model15)\n\n\nCall:\nglm(formula = case ~ own_Pou, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.0864  -0.0742  -0.0742  -0.0742   3.4339  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -5.89295    0.09028 -65.271   <2e-16 ***\nown_PouTRUE  0.30311    0.29216   1.037      0.3    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1868.4  on 48199  degrees of freedom\nResidual deviance: 1867.4  on 48198  degrees of freedom\n  (33014 observations deleted due to missingness)\nAIC: 1871.4\n\nNumber of Fisher Scoring iterations: 8\n\nexp(coef(LR_Model15))\n\n(Intercept) own_PouTRUE \n0.002758837 1.354060351 \n\n\ncalculate OR for exposure trees, rice field, water bodies\n\nLR_Model16 <- glm(case ~ Bamboo_Tree, family=binomial, data=final_dataset)\nsummary(LR_Model16)\n\n\nCall:\nglm(formula = case ~ Bamboo_Tree, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.0739  -0.0739  -0.0699  -0.0699   3.4690  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -6.0147     0.0910 -66.093   <2e-16 ***\nBamboo_Tree   0.1123     0.1412   0.795    0.426    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2885.3  on 81212  degrees of freedom\nAIC: 2889.3\n\nNumber of Fisher Scoring iterations: 8\n\nexp(coef(LR_Model16))\n\n(Intercept) Bamboo_Tree \n0.002442569 1.118841553 \n\nLR_Model17 <- glm(case ~ Banana_Tree, family=binomial, data=final_dataset)\nsummary(LR_Model17)\n\n\nCall:\nglm(formula = case ~ Banana_Tree, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.0867  -0.0686  -0.0686  -0.0686   3.4793  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -5.5821     0.1528 -36.536  < 2e-16 ***\nBanana_Tree  -0.4683     0.1716  -2.729  0.00636 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2879.2  on 81212  degrees of freedom\nAIC: 2883.2\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(LR_Model17))\n\n(Intercept) Banana_Tree \n0.003764665 0.626039761 \n\nLR_Model18 <- glm(case ~ Neem_Tree, family=binomial, data=final_dataset)\nsummary(LR_Model18)\n\n\nCall:\nglm(formula = case ~ Neem_Tree, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.0750  -0.0750  -0.0750  -0.0662   3.5001  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -5.87275    0.08683 -67.633   <2e-16 ***\nNeem_Tree   -0.25027    0.14520  -1.724   0.0848 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2882.9  on 81212  degrees of freedom\nAIC: 2886.9\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(LR_Model18))\n\n(Intercept)   Neem_Tree \n0.002815113 0.778588109 \n\nLR_Model19 <- glm(case ~ Perm_Water_Body, family=binomial, data=final_dataset)\nsummary(LR_Model19)\n\n\nCall:\nglm(formula = case ~ Perm_Water_Body, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.0776  -0.0776  -0.0776  -0.0643   3.5166  \n\nCoefficients:\n                Estimate Std. Error z value Pr(>|z|)    \n(Intercept)     -5.80523    0.08922 -65.066  < 2e-16 ***\nPerm_Water_Body -0.37601    0.14259  -2.637  0.00836 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2878.8  on 81212  degrees of freedom\nAIC: 2882.8\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(LR_Model19))\n\n    (Intercept) Perm_Water_Body \n     0.00301176      0.68659395 \n\nLR_Model20 <- glm(case ~ Rice_Field, family=binomial, data=final_dataset)\nsummary(LR_Model20)\n\n\nCall:\nglm(formula = case ~ Rice_Field, family = binomial, data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.0732  -0.0732  -0.0732  -0.0732   3.5194  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -6.1910     0.1717 -36.062   <2e-16 ***\nRice_Field    0.2713     0.1878   1.445    0.149    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2883.7  on 81212  degrees of freedom\nAIC: 2887.7\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(LR_Model20))\n\n(Intercept)  Rice_Field \n0.002047823 1.311719312 \n\n\nNow I fit a logistic regression model with all factors that were signifcant at p < 0.10. I start by fitting univariate logistic regression\nmodels for all factors, followed by an LR test\n\nGLM.a <- glm(case ~ agegrp, family=binomial(logit), data=final_dataset)\nGLM.b <- glm(case ~ Bamboo_Tree, family=binomial(logit), data=final_dataset)\nGLM.c <- glm(case ~ Banana_Tree, family=binomial(logit), data=final_dataset)\nGLM.d <- glm(case ~ Neem_Tree, family=binomial(logit), data=final_dataset)\nGLM.e <- glm(case ~ Perm_Water_Body, family=binomial(logit), data=final_dataset)\nGLM.f <- glm(case ~ Rice_Field, family=binomial(logit), data=final_dataset)\nGLM.g <- glm(case ~ IRS_09, family=binomial(logit), data=final_dataset)\nGLM.h <- glm(case ~ IRS_10, family=binomial(logit), data=final_dataset)\nGLM.i <- glm(case ~ mushahar, family=binomial(logit), data=final_dataset)\nGLM.j <- glm(case ~ net3, family=binomial(logit), data=final_dataset)\nGLM.k <- glm(case ~ risk_wall, family=binomial(logit), data=final_dataset)\nGLM.l <- glm(case ~ own_buf, family=binomial(logit), data=final_dataset)\nGLM.m <- glm(case ~ own_cow, family=binomial(logit), data=final_dataset)\nGLM.n <- glm(case ~ own_Goa, family=binomial(logit), data=final_dataset)\nGLM.o <- glm(case ~ own_Pou, family=binomial(logit), data=final_dataset)\nGLM.p <- glm(case ~ agegrp, family=binomial(logit), data=final_dataset)\nGLM.q <- glm(case ~ female, family=binomial(logit), data=final_dataset)\nGLM.r <- glm(case ~ Damp_floor, family=binomial(logit), data=final_dataset)\nGLM.s <- glm(case ~ asset_index, family=binomial(logit), data=final_dataset)\n\n\nanova(GLM.a, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n       Df Deviance Resid. Df Resid. Dev Pr(>Chi)\nNULL                   76812     2862.8         \nagegrp  4   2.2407     76808     2860.6   0.6916\n\nanova(GLM.b, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n            Df Deviance Resid. Df Resid. Dev Pr(>Chi)\nNULL                        81213     2885.9         \nBamboo_Tree  1  0.62798     81212     2885.3   0.4281\n\nanova(GLM.c, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n            Df Deviance Resid. Df Resid. Dev Pr(>Chi)   \nNULL                        81213     2885.9            \nBanana_Tree  1   6.7795     81212     2879.2 0.009221 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanova(GLM.d, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n          Df Deviance Resid. Df Resid. Dev Pr(>Chi)  \nNULL                      81213     2885.9           \nNeem_Tree  1   3.0351     81212     2882.9  0.08148 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanova(GLM.e, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n                Df Deviance Resid. Df Resid. Dev Pr(>Chi)   \nNULL                            81213     2885.9            \nPerm_Water_Body  1   7.1054     81212     2878.8 0.007685 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanova(GLM.f, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n           Df Deviance Resid. Df Resid. Dev Pr(>Chi)\nNULL                       81213     2885.9         \nRice_Field  1   2.2157     81212     2883.7   0.1366\n\nanova(GLM.g, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n       Df Deviance Resid. Df Resid. Dev  Pr(>Chi)    \nNULL                   81213     2885.9              \nIRS_09  1   14.681     81212     2871.2 0.0001273 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanova(GLM.h, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n       Df Deviance Resid. Df Resid. Dev  Pr(>Chi)    \nNULL                   81213     2885.9              \nIRS_10  1   45.825     81212     2840.1 1.293e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanova(GLM.i, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n         Df Deviance Resid. Df Resid. Dev  Pr(>Chi)    \nNULL                     81213     2885.9              \nmushahar  1   68.449     81212     2817.5 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanova(GLM.j, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n     Df Deviance Resid. Df Resid. Dev  Pr(>Chi)    \nNULL                 81213     2885.9              \nnet3  1   18.931     81212     2867.0 1.355e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanova(GLM.k, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n          Df Deviance Resid. Df Resid. Dev  Pr(>Chi)    \nNULL                      81213     2885.9              \nrisk_wall  2   43.079     81211     2842.8 4.421e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanova(GLM.l, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n        Df Deviance Resid. Df Resid. Dev Pr(>Chi)\nNULL                    48199     1868.4         \nown_buf  1   1.4042     48198     1867.0    0.236\n\nanova(GLM.m, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n        Df Deviance Resid. Df Resid. Dev Pr(>Chi)  \nNULL                    48199     1868.4           \nown_cow  1    6.344     48198     1862.0  0.01178 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanova(GLM.n, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n        Df Deviance Resid. Df Resid. Dev Pr(>Chi)  \nNULL                    48199     1868.4           \nown_Goa  1   5.4818     48198     1862.9  0.01922 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanova(GLM.o, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n        Df Deviance Resid. Df Resid. Dev Pr(>Chi)\nNULL                    48199     1868.4         \nown_Pou  1  0.99283     48198     1867.4   0.3191\n\nanova(GLM.p, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n       Df Deviance Resid. Df Resid. Dev Pr(>Chi)\nNULL                   76812     2862.8         \nagegrp  4   2.2407     76808     2860.6   0.6916\n\nanova(GLM.q, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n       Df Deviance Resid. Df Resid. Dev Pr(>Chi)\nNULL                   81213     2885.9         \nfemale  1  0.29132     81212     2885.6   0.5894\n\nanova(GLM.r, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n           Df Deviance Resid. Df Resid. Dev  Pr(>Chi)    \nNULL                       81213     2885.9              \nDamp_floor  1   14.684     81212     2871.2 0.0001271 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanova(GLM.s, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: case\n\nTerms added sequentially (first to last)\n\n            Df Deviance Resid. Df Resid. Dev  Pr(>Chi)    \nNULL                        81213     2885.9              \nasset_index  4   55.333     81209     2830.6 2.766e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSignificant at 0.10 are; IRS_09, IRS_10, asset index, banana tree, neem tree, water body, mushahar, net3, own_Goa, own_buf, risk_wall and Damp_Floor.\nI the final model I will consider all except the IRS variables because here I suspect reversed causality\n\nGLM.1 <- glm(case ~ asset_index + Banana_Tree + Neem_Tree + mushahar + Perm_Water_Body + net3 + own_Goa + own_buf + risk_wall + Damp_floor, \n             family=binomial(logit), data=final_dataset)\nsummary(GLM.1)\n\n\nCall:\nglm(formula = case ~ asset_index + Banana_Tree + Neem_Tree + \n    mushahar + Perm_Water_Body + net3 + own_Goa + own_buf + risk_wall + \n    Damp_floor, family = binomial(logit), data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.2934  -0.0833  -0.0653  -0.0497   4.0039  \n\nCoefficients:\n                Estimate Std. Error z value Pr(>|z|)    \n(Intercept)      -6.1440     0.7317  -8.397  < 2e-16 ***\nasset_index2      0.9281     0.2712   3.422 0.000623 ***\nasset_index3      0.0783     0.3058   0.256 0.797901    \nasset_index4      0.1684     0.3197   0.527 0.598314    \nasset_index5     -0.1809     0.4125  -0.438 0.661091    \nBanana_Tree      -0.1740     0.2291  -0.760 0.447361    \nNeem_Tree        -0.0299     0.1836  -0.163 0.870645    \nmushaharTRUE      1.6537     0.3112   5.314 1.07e-07 ***\nPerm_Water_Body  -0.2044     0.1777  -1.150 0.250063    \nnet3TRUE         -0.1530     0.2795  -0.547 0.584210    \nown_GoaTRUE       0.2875     0.1890   1.521 0.128223    \nown_bufTRUE       0.2834     0.2038   1.391 0.164337    \nrisk_wall2       -0.5215     0.1929  -2.704 0.006852 ** \nrisk_wall3       -1.1292     0.4380  -2.578 0.009933 ** \nDamp_floorTRUE    0.3249     0.6498   0.500 0.617109    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1868.4  on 48199  degrees of freedom\nResidual deviance: 1780.2  on 48185  degrees of freedom\n  (33014 observations deleted due to missingness)\nAIC: 1810.2\n\nNumber of Fisher Scoring iterations: 10\n\nexp(coef(GLM.1))  # Exponentiated coefficients (\"odds ratios\")\n\n    (Intercept)    asset_index2    asset_index3    asset_index4    asset_index5 \n    0.002146395     2.529682254     1.081449092     1.183449238     0.834547488 \n    Banana_Tree       Neem_Tree    mushaharTRUE Perm_Water_Body        net3TRUE \n    0.840263155     0.970540858     5.226359245     0.815175073     0.858155462 \n    own_GoaTRUE     own_bufTRUE      risk_wall2      risk_wall3  Damp_floorTRUE \n    1.333083419     1.327582613     0.593597060     0.323281498     1.383833170 \n\n\nWeakest is neem tree with a p-value of 0.949, so I drop it\n\nGLM.2 <- glm(case ~ asset_index + Banana_Tree + mushahar + Perm_Water_Body + net3 + own_Goa + own_buf + risk_wall + Damp_floor, \n             family=binomial(logit), data=final_dataset)\nsummary(GLM.2)\n\n\nCall:\nglm(formula = case ~ asset_index + Banana_Tree + mushahar + Perm_Water_Body + \n    net3 + own_Goa + own_buf + risk_wall + Damp_floor, family = binomial(logit), \n    data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.2926  -0.0842  -0.0649  -0.0499   4.0004  \n\nCoefficients:\n                Estimate Std. Error z value Pr(>|z|)    \n(Intercept)     -6.15294    0.72969  -8.432  < 2e-16 ***\nasset_index2     0.92662    0.27114   3.418 0.000632 ***\nasset_index3     0.07664    0.30568   0.251 0.802023    \nasset_index4     0.16621    0.31947   0.520 0.602870    \nasset_index5    -0.18429    0.41212  -0.447 0.654746    \nBanana_Tree     -0.17534    0.22893  -0.766 0.443724    \nmushaharTRUE     1.65995    0.30894   5.373 7.74e-08 ***\nPerm_Water_Body -0.20595    0.17741  -1.161 0.245694    \nnet3TRUE        -0.15366    0.27952  -0.550 0.582517    \nown_GoaTRUE      0.28719    0.18901   1.519 0.128650    \nown_bufTRUE      0.28588    0.20319   1.407 0.159434    \nrisk_wall2      -0.52130    0.19287  -2.703 0.006874 ** \nrisk_wall3      -1.12898    0.43805  -2.577 0.009958 ** \nDamp_floorTRUE   0.32526    0.64983   0.501 0.616700    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1868.4  on 48199  degrees of freedom\nResidual deviance: 1780.2  on 48186  degrees of freedom\n  (33014 observations deleted due to missingness)\nAIC: 1808.2\n\nNumber of Fisher Scoring iterations: 10\n\nexp(coef(GLM.2))  # Exponentiated coefficients (\"odds ratios\")\n\n    (Intercept)    asset_index2    asset_index3    asset_index4    asset_index5 \n    0.002127209     2.525966224     1.079656728     1.180824956     0.831692253 \n    Banana_Tree    mushaharTRUE Perm_Water_Body        net3TRUE     own_GoaTRUE \n    0.839172733     5.259049206     0.813875981     0.857566816     1.332676365 \n    own_bufTRUE      risk_wall2      risk_wall3  Damp_floorTRUE \n    1.330938029     0.593750888     0.323362129     1.384390120 \n\n\n\nanova(GLM.1, GLM.2, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel 1: case ~ asset_index + Banana_Tree + Neem_Tree + mushahar + Perm_Water_Body + \n    net3 + own_Goa + own_buf + risk_wall + Damp_floor\nModel 2: case ~ asset_index + Banana_Tree + mushahar + Perm_Water_Body + \n    net3 + own_Goa + own_buf + risk_wall + Damp_floor\n  Resid. Df Resid. Dev Df  Deviance Pr(>Chi)\n1     48185     1780.2                      \n2     48186     1780.2 -1 -0.026584   0.8705\n\n\nweakest is now damp floor with a p-value of 0.944, so I drop it\n\nGLM.3 <- glm(case ~ asset_index + Banana_Tree + mushahar + Perm_Water_Body + net3 + own_Goa + own_buf + risk_wall, \n             family=binomial(logit), data=final_dataset)\nsummary(GLM.3)\n\n\nCall:\nglm(formula = case ~ asset_index + Banana_Tree + mushahar + Perm_Water_Body + \n    net3 + own_Goa + own_buf + risk_wall, family = binomial(logit), \n    data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.2927  -0.0843  -0.0649  -0.0488   3.9467  \n\nCoefficients:\n                Estimate Std. Error z value Pr(>|z|)    \n(Intercept)     -5.83307    0.34973 -16.679  < 2e-16 ***\nasset_index2     0.92713    0.27117   3.419 0.000629 ***\nasset_index3     0.07777    0.30570   0.254 0.799178    \nasset_index4     0.16721    0.31946   0.523 0.600686    \nasset_index5    -0.20574    0.41189  -0.499 0.617434    \nBanana_Tree     -0.17128    0.22882  -0.749 0.454138    \nmushaharTRUE     1.65872    0.30898   5.368 7.95e-08 ***\nPerm_Water_Body -0.20662    0.17736  -1.165 0.244041    \nnet3TRUE        -0.15580    0.27970  -0.557 0.577520    \nown_GoaTRUE      0.28757    0.18904   1.521 0.128206    \nown_bufTRUE      0.28963    0.20308   1.426 0.153811    \nrisk_wall2      -0.52212    0.19284  -2.708 0.006779 ** \nrisk_wall3      -1.21517    0.41253  -2.946 0.003223 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1868.4  on 48199  degrees of freedom\nResidual deviance: 1780.5  on 48187  degrees of freedom\n  (33014 observations deleted due to missingness)\nAIC: 1806.5\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(GLM.3))  # Exponentiated coefficients (\"odds ratios\")\n\n    (Intercept)    asset_index2    asset_index3    asset_index4    asset_index5 \n    0.002929059     2.527233069     1.080878012     1.182004240     0.814048351 \n    Banana_Tree    mushaharTRUE Perm_Water_Body        net3TRUE     own_GoaTRUE \n    0.842583760     5.252598902     0.813331045     0.855733043     1.333184251 \n    own_bufTRUE      risk_wall2      risk_wall3 \n    1.335938017     0.593263747     0.296659129 \n\n\n\nanova(GLM.2, GLM.3, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel 1: case ~ asset_index + Banana_Tree + mushahar + Perm_Water_Body + \n    net3 + own_Goa + own_buf + risk_wall + Damp_floor\nModel 2: case ~ asset_index + Banana_Tree + mushahar + Perm_Water_Body + \n    net3 + own_Goa + own_buf + risk_wall\n  Resid. Df Resid. Dev Df Deviance Pr(>Chi)\n1     48186     1780.2                     \n2     48187     1780.5 -1 -0.26782   0.6048\n\n\nweakest is now net3, p = 0.247 so I drop it\n\nGLM.4 <- glm(case ~ asset_index + Banana_Tree + mushahar + Perm_Water_Body + own_Goa + own_buf + risk_wall, \n             family=binomial(logit), data=final_dataset)\nsummary(GLM.4)\n\n\nCall:\nglm(formula = case ~ asset_index + Banana_Tree + mushahar + Perm_Water_Body + \n    own_Goa + own_buf + risk_wall, family = binomial(logit), \n    data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.2929  -0.0837  -0.0652  -0.0495   3.9258  \n\nCoefficients:\n                Estimate Std. Error z value Pr(>|z|)    \n(Intercept)     -5.84985    0.34892 -16.766  < 2e-16 ***\nasset_index2     0.92647    0.27122   3.416 0.000636 ***\nasset_index3     0.07246    0.30560   0.237 0.812561    \nasset_index4     0.14698    0.31768   0.463 0.643597    \nasset_index5    -0.24545    0.40683  -0.603 0.546284    \nBanana_Tree     -0.16924    0.22883  -0.740 0.459539    \nmushaharTRUE     1.67108    0.30840   5.419 6.01e-08 ***\nPerm_Water_Body -0.20758    0.17737  -1.170 0.241881    \nown_GoaTRUE      0.29393    0.18885   1.556 0.119602    \nown_bufTRUE      0.29379    0.20299   1.447 0.147815    \nrisk_wall2      -0.52443    0.19285  -2.719 0.006541 ** \nrisk_wall3      -1.23333    0.41184  -2.995 0.002748 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1868.4  on 48199  degrees of freedom\nResidual deviance: 1780.8  on 48188  degrees of freedom\n  (33014 observations deleted due to missingness)\nAIC: 1804.8\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(GLM.4))  # Exponentiated coefficients (\"odds ratios\")\n\n    (Intercept)    asset_index2    asset_index3    asset_index4    asset_index5 \n    0.002880318     2.525581693     1.075155173     1.158334223     0.782348527 \n    Banana_Tree    mushaharTRUE Perm_Water_Body     own_GoaTRUE     own_bufTRUE \n    0.844302851     5.317891377     0.812551966     1.341690715     1.341496852 \n     risk_wall2      risk_wall3 \n    0.591894775     0.291320778 \n\n\n\nanova(GLM.3, GLM.4, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel 1: case ~ asset_index + Banana_Tree + mushahar + Perm_Water_Body + \n    net3 + own_Goa + own_buf + risk_wall\nModel 2: case ~ asset_index + Banana_Tree + mushahar + Perm_Water_Body + \n    own_Goa + own_buf + risk_wall\n  Resid. Df Resid. Dev Df Deviance Pr(>Chi)\n1     48187     1780.5                     \n2     48188     1780.8 -1 -0.32058   0.5713\n\n\nweakest is now banana tree, p = 0.244107, so I drop it\n\nGLM.5 <- glm(case ~ asset_index + mushahar + Perm_Water_Body + own_Goa + own_buf + risk_wall, \n             family=binomial(logit), data=final_dataset)\nsummary(GLM.5)\n\n\nCall:\nglm(formula = case ~ asset_index + mushahar + Perm_Water_Body + \n    own_Goa + own_buf + risk_wall, family = binomial(logit), \n    data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.3014  -0.0847  -0.0653  -0.0498   3.9226  \n\nCoefficients:\n                Estimate Std. Error z value Pr(>|z|)    \n(Intercept)     -5.98763    0.29714 -20.151  < 2e-16 ***\nasset_index2     0.92714    0.27152   3.415 0.000639 ***\nasset_index3     0.06817    0.30574   0.223 0.823569    \nasset_index4     0.14386    0.31798   0.452 0.650976    \nasset_index5    -0.25014    0.40673  -0.615 0.538547    \nmushaharTRUE     1.69505    0.30715   5.519 3.42e-08 ***\nPerm_Water_Body -0.21717    0.17690  -1.228 0.219587    \nown_GoaTRUE      0.29642    0.18882   1.570 0.116457    \nown_bufTRUE      0.29155    0.20293   1.437 0.150796    \nrisk_wall2      -0.52801    0.19281  -2.738 0.006173 ** \nrisk_wall3      -1.23801    0.41153  -3.008 0.002627 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1868.4  on 48199  degrees of freedom\nResidual deviance: 1781.3  on 48189  degrees of freedom\n  (33014 observations deleted due to missingness)\nAIC: 1803.3\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(GLM.5))  # Exponentiated coefficients (\"odds ratios\")\n\n    (Intercept)    asset_index2    asset_index3    asset_index4    asset_index5 \n     0.00250961      2.52725830      1.07054456      1.15471734      0.77868991 \n   mushaharTRUE Perm_Water_Body     own_GoaTRUE     own_bufTRUE      risk_wall2 \n     5.44690955      0.80479068      1.34503316      1.33850440      0.58977815 \n     risk_wall3 \n     0.28996011 \n\n\n\nanova(GLM.4, GLM.5, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel 1: case ~ asset_index + Banana_Tree + mushahar + Perm_Water_Body + \n    own_Goa + own_buf + risk_wall\nModel 2: case ~ asset_index + mushahar + Perm_Water_Body + own_Goa + own_buf + \n    risk_wall\n  Resid. Df Resid. Dev Df Deviance Pr(>Chi)\n1     48188     1780.8                     \n2     48189     1781.3 -1 -0.52843   0.4673\n\n\nweakest is now permanent water body with a p-value of 0.12, si I drop it\n\nGLM.5 <- glm(case ~ asset_index + mushahar + own_Goa + own_buf + risk_wall, \n             family=binomial(logit), data=final_dataset)\nsummary(GLM.5)\n\n\nCall:\nglm(formula = case ~ asset_index + mushahar + own_Goa + own_buf + \n    risk_wall, family = binomial(logit), data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.2928  -0.0813  -0.0647  -0.0527   3.8970  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -6.08251    0.28798 -21.121  < 2e-16 ***\nasset_index2  0.92263    0.27136   3.400 0.000674 ***\nasset_index3  0.06921    0.30564   0.226 0.820865    \nasset_index4  0.13971    0.31813   0.439 0.660533    \nasset_index5 -0.25522    0.40697  -0.627 0.530589    \nmushaharTRUE  1.72838    0.30586   5.651  1.6e-08 ***\nown_GoaTRUE   0.30346    0.18877   1.608 0.107938    \nown_bufTRUE   0.28955    0.20273   1.428 0.153227    \nrisk_wall2   -0.52996    0.19290  -2.747 0.006008 ** \nrisk_wall3   -1.25498    0.41132  -3.051 0.002280 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1868.4  on 48199  degrees of freedom\nResidual deviance: 1782.9  on 48190  degrees of freedom\n  (33014 observations deleted due to missingness)\nAIC: 1802.9\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(GLM.5))  # Exponentiated coefficients (\"odds ratios\")\n\n (Intercept) asset_index2 asset_index3 asset_index4 asset_index5 mushaharTRUE \n 0.002282434  2.515906508  1.071659119  1.149944761  0.774748456  5.631528602 \n own_GoaTRUE  own_bufTRUE   risk_wall2   risk_wall3 \n 1.354533778  1.335826304  0.588629197  0.285080672 \n\n\n\nanova(GLM.4, GLM.5, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel 1: case ~ asset_index + Banana_Tree + mushahar + Perm_Water_Body + \n    own_Goa + own_buf + risk_wall\nModel 2: case ~ asset_index + mushahar + own_Goa + own_buf + risk_wall\n  Resid. Df Resid. Dev Df Deviance Pr(>Chi)\n1     48188     1780.8                     \n2     48190     1782.8 -2  -2.0541   0.3581\n\n\nweakest is now own_buf with a p-value of 0.078, so I drop it\n\nGLM.6 <- glm(case ~ asset_index + mushahar + own_Goa + risk_wall, \n             family=binomial(logit), data=final_dataset)\nsummary(GLM.6)\n\n\nCall:\nglm(formula = case ~ asset_index + mushahar + own_Goa + risk_wall, \n    family = binomial(logit), data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.3019  -0.0836  -0.0662  -0.0481   3.8724  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -5.98541    0.27950 -21.415  < 2e-16 ***\nasset_index2  0.95132    0.27085   3.512 0.000444 ***\nasset_index3  0.09875    0.30529   0.323 0.746354    \nasset_index4  0.17073    0.31769   0.537 0.590986    \nasset_index5 -0.23452    0.40725  -0.576 0.564699    \nmushaharTRUE  1.73597    0.30660   5.662  1.5e-08 ***\nown_GoaTRUE   0.23231    0.18129   1.281 0.200046    \nrisk_wall2   -0.53998    0.19254  -2.805 0.005039 ** \nrisk_wall3   -1.27728    0.41135  -3.105 0.001902 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1868.4  on 48199  degrees of freedom\nResidual deviance: 1784.8  on 48191  degrees of freedom\n  (33014 observations deleted due to missingness)\nAIC: 1802.8\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(GLM.6))  # Exponentiated coefficients (\"odds ratios\")\n\n (Intercept) asset_index2 asset_index3 asset_index4 asset_index5 mushaharTRUE \n 0.002515194  2.589122945  1.103787926  1.186168590  0.790946735  5.674401512 \n own_GoaTRUE   risk_wall2   risk_wall3 \n 1.261511627  0.582761766  0.278793638 \n\n\n\nanova(GLM.5, GLM.6, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel 1: case ~ asset_index + mushahar + own_Goa + own_buf + risk_wall\nModel 2: case ~ asset_index + mushahar + own_Goa + risk_wall\n  Resid. Df Resid. Dev Df Deviance Pr(>Chi)\n1     48190     1782.8                     \n2     48191     1784.8 -1  -1.9646    0.161\n\n\nweakest is now own_Goa, with a p-value of 0.059, so I drop it\n\nGLM.7 <- glm(case ~ asset_index + mushahar + risk_wall, \n             family=binomial(logit), data=final_dataset)\nsummary(GLM.7)\n\n\nCall:\nglm(formula = case ~ asset_index + mushahar + risk_wall, family = binomial(logit), \n    data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.2709  -0.0772  -0.0656  -0.0484   3.8634  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -5.81466    0.16086 -36.148  < 2e-16 ***\nasset_index2  0.55815    0.19458   2.869 0.004124 ** \nasset_index3 -0.08206    0.22363  -0.367 0.713656    \nasset_index4  0.08176    0.22907   0.357 0.721141    \nasset_index5 -0.52755    0.31406  -1.680 0.092998 .  \nmushaharTRUE  1.96990    0.22180   8.881  < 2e-16 ***\nrisk_wall2   -0.40614    0.15684  -2.590 0.009609 ** \nrisk_wall3   -1.11997    0.30776  -3.639 0.000274 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2758.5  on 81206  degrees of freedom\nAIC: 2774.5\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(GLM.7))  # Exponentiated coefficients (\"odds ratios\")\n\n (Intercept) asset_index2 asset_index3 asset_index4 asset_index5 mushaharTRUE \n 0.002983507  1.747430447  0.921214685  1.085197543  0.590046584  7.169994094 \n  risk_wall2   risk_wall3 \n 0.666215469  0.326289121 \n\n\n\n#anova(GLM.6, GLM.7, test=\"Chisq\")\n\nthe LR test is non significant, p = 0.06 so I can indeed drop own_Goa\nNow all factors are significant for at least one level. Asset index is weakest, I will just try without it\n\nGLM.8 <- glm(case ~ mushahar + risk_wall, family=binomial(logit), data=final_dataset)\nsummary(GLM.8)\n\n\nCall:\nglm(formula = case ~ mushahar + risk_wall, family = binomial(logit), \n    data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.2219  -0.0825  -0.0648  -0.0648   3.7858  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   -5.6816     0.1032 -55.069  < 2e-16 ***\nmushaharTRUE   1.9894     0.2019   9.853  < 2e-16 ***\nrisk_wall2    -0.4843     0.1500  -3.229  0.00124 ** \nrisk_wall3    -1.4839     0.2779  -5.339 9.33e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2777.4  on 81210  degrees of freedom\nAIC: 2785.4\n\nNumber of Fisher Scoring iterations: 9\n\n\n\nexp(coef(GLM.8))  # Exponentiated coefficients (\"odds ratios\")\n\n (Intercept) mushaharTRUE   risk_wall2   risk_wall3 \n 0.003408013  7.310967636  0.616106559  0.226747130 \n\n\nClearly the model with asset index is significantly better than the model without, p= 0.0008.\n\nanova(GLM.7, GLM.8, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel 1: case ~ asset_index + mushahar + risk_wall\nModel 2: case ~ mushahar + risk_wall\n  Resid. Df Resid. Dev Df Deviance  Pr(>Chi)    \n1     81206     2758.5                          \n2     81210     2777.4 -4  -18.889 0.0008265 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nNext I fit an interaction between risk wall and asset index\n\n#GLM.9 <- glm(case ~ mushahar + risk_wall + asset_index  +asset_index*risk_wall, family=binomial(logit), data=final_dataset)\n#summary(GLM.9)\n#exp(coef(GLM.9))  # Exponentiated coefficients (\"odds ratios\")\n\nAnd I do the likelihood ratio testing\n\n#anova(GLM.7, GLM.9, test=\"Chisq\")\n\np-value of LR test is 0.72, so model with interaction is not significnatly better\nNext I try interaction between Mushahar and asset index\n\nGLM.10 <- glm(case ~ mushahar + risk_wall + asset_index + asset_index * mushahar, family=binomial(logit), data=final_dataset)\nsummary(GLM.10)\n\n\nCall:\nglm(formula = case ~ mushahar + risk_wall + asset_index + asset_index * \n    mushahar, family = binomial(logit), data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.3379  -0.0776  -0.0655  -0.0474   3.8754  \n\nCoefficients:\n                           Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                -5.80280    0.17293 -33.556  < 2e-16 ***\nmushaharTRUE                1.90493    0.29048   6.558 5.46e-11 ***\nrisk_wall2                 -0.38118    0.15647  -2.436 0.014847 *  \nrisk_wall3                 -1.09787    0.30715  -3.574 0.000351 ***\nasset_index2                0.49491    0.21872   2.263 0.023651 *  \nasset_index3               -0.02642    0.23691  -0.112 0.911219    \nasset_index4                0.04108    0.24367   0.169 0.866110    \nasset_index5               -0.60824    0.32754  -1.857 0.063309 .  \nmushaharTRUE:asset_index2   0.37575    0.46189   0.814 0.415930    \nmushaharTRUE:asset_index3 -13.26060  274.31195  -0.048 0.961444    \nmushaharTRUE:asset_index4   0.32648    0.78551   0.416 0.677683    \nmushaharTRUE:asset_index5   1.67151    1.09699   1.524 0.127578    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2750.4  on 81202  degrees of freedom\nAIC: 2774.4\n\nNumber of Fisher Scoring iterations: 16\n\nexp(coef(GLM.10))  # Exponentiated coefficients (\"odds ratios\")\n\n              (Intercept)              mushaharTRUE                risk_wall2 \n             3.019089e-03              6.718935e+00              6.830553e-01 \n               risk_wall3              asset_index2              asset_index3 \n             3.335810e-01              1.640354e+00              9.739296e-01 \n             asset_index4              asset_index5 mushaharTRUE:asset_index2 \n             1.041938e+00              5.443084e-01              1.456078e+00 \nmushaharTRUE:asset_index3 mushaharTRUE:asset_index4 mushaharTRUE:asset_index5 \n             1.741781e-06              1.386079e+00              5.320179e+00 \n\n\nLR test has a p-value of 0.09, so complex model not significantly better\n\nanova(GLM.7, GLM.10, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel 1: case ~ asset_index + mushahar + risk_wall\nModel 2: case ~ mushahar + risk_wall + asset_index + asset_index * mushahar\n  Resid. Df Resid. Dev Df Deviance Pr(>Chi)  \n1     81206     2758.5                       \n2     81202     2750.4  4   8.0778  0.08877 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nFinally I test the interaction between Mushahar and asset index\n\nGLM.11 <- glm(case ~ mushahar + risk_wall + asset_index + risk_wall* mushahar, family=binomial(logit), data=final_dataset)\nsummary(GLM.11)\n\n\nCall:\nglm(formula = case ~ mushahar + risk_wall + asset_index + risk_wall * \n    mushahar, family = binomial(logit), data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.2956  -0.0766  -0.0660  -0.0484   3.8607  \n\nCoefficients:\n                         Estimate Std. Error z value Pr(>|z|)    \n(Intercept)              -5.82884    0.16381 -35.583  < 2e-16 ***\nmushaharTRUE              2.15878    0.40886   5.280 1.29e-07 ***\nrisk_wall2               -0.38007    0.16606  -2.289 0.022098 *  \nrisk_wall3               -1.08461    0.30997  -3.499 0.000467 ***\nasset_index2              0.56158    0.19505   2.879 0.003988 ** \nasset_index3             -0.07706    0.22438  -0.343 0.731262    \nasset_index4              0.08036    0.22972   0.350 0.726472    \nasset_index5             -0.53846    0.31488  -1.710 0.087256 .  \nmushaharTRUE:risk_wall2  -0.23593    0.46385  -0.509 0.611009    \nmushaharTRUE:risk_wall3 -10.68984  229.30575  -0.047 0.962817    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2757.8  on 81204  degrees of freedom\nAIC: 2777.8\n\nNumber of Fisher Scoring iterations: 14\n\nexp(coef(GLM.11))  # Exponentiated coefficients (\"odds ratios\")\n\n            (Intercept)            mushaharTRUE              risk_wall2 \n           2.941478e-03            8.660562e+00            6.838146e-01 \n             risk_wall3            asset_index2            asset_index3 \n           3.380347e-01            1.753440e+00            9.258332e-01 \n           asset_index4            asset_index5 mushaharTRUE:risk_wall2 \n           1.083679e+00            5.836490e-01            7.898355e-01 \nmushaharTRUE:risk_wall3 \n           2.277521e-05 \n\n\nLR test has a p-vaule of 0.69, so no indication for an interaction\n\nanova(GLM.11, GLM.7, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel 1: case ~ mushahar + risk_wall + asset_index + risk_wall * mushahar\nModel 2: case ~ asset_index + mushahar + risk_wall\n  Resid. Df Resid. Dev Df Deviance Pr(>Chi)\n1     81204     2757.8                     \n2     81206     2758.5 -2 -0.75474   0.6857\n\n\nSo my final model remains model 7 with asset index, mushahar and risk wall\n\nGLM.7 <- glm(case ~ mushahar + risk_wall + asset_index, family=binomial(logit), data=final_dataset)\nsummary(GLM.7)\n\n\nCall:\nglm(formula = case ~ mushahar + risk_wall + asset_index, family = binomial(logit), \n    data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.2709  -0.0772  -0.0656  -0.0484   3.8634  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -5.81466    0.16086 -36.148  < 2e-16 ***\nmushaharTRUE  1.96990    0.22180   8.881  < 2e-16 ***\nrisk_wall2   -0.40614    0.15684  -2.590 0.009609 ** \nrisk_wall3   -1.11997    0.30776  -3.639 0.000274 ***\nasset_index2  0.55815    0.19458   2.869 0.004124 ** \nasset_index3 -0.08206    0.22363  -0.367 0.713656    \nasset_index4  0.08176    0.22907   0.357 0.721141    \nasset_index5 -0.52755    0.31406  -1.680 0.092998 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2758.5  on 81206  degrees of freedom\nAIC: 2774.5\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(GLM.7))  # Exponentiated coefficients (\"odds ratios\")\n\n (Intercept) mushaharTRUE   risk_wall2   risk_wall3 asset_index2 asset_index3 \n 0.002983507  7.169994094  0.666215469  0.326289121  1.747430447  0.921214685 \nasset_index4 asset_index5 \n 1.085197543  0.590046584 \n\nexp(confint(GLM.7))\n\nWaiting for profiling to be done...\n\n\n                   2.5 %       97.5 %\n(Intercept)  0.002150039  0.004041636\nmushaharTRUE 4.582946449 10.957987112\nrisk_wall2   0.489354472  0.905649249\nrisk_wall3   0.172344535  0.579799021\nasset_index2 1.193911726  2.564485167\nasset_index3 0.590438223  1.422810718\nasset_index4 0.689253185  1.696017962\nasset_index5 0.311077759  1.071790719\n\n\nFinal model: GLM.7\nYou could consider recoding asset index to a binary varibale poverty, 1:4 = TRUE, 5 = FALSE\nThe interaction terms remain non significant.\nIf you really want to check for interaction is better to have two categories\nCreation variable poverty\n\nfinal_dataset$poverty <- ifelse(final_dataset$asset_index %in% 1:4, TRUE, FALSE)\n\n\nGLM.14 <- glm(case ~ mushahar + risk_wall + poverty, family=binomial(logit), data=final_dataset)\nsummary(GLM.14)\n\n\nCall:\nglm(formula = case ~ mushahar + risk_wall + poverty, family = binomial(logit), \n    data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.2155  -0.0835  -0.0682  -0.0488   3.8695  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   -6.3256     0.2879 -21.973  < 2e-16 ***\nmushaharTRUE   1.9064     0.2042   9.336  < 2e-16 ***\nrisk_wall2    -0.4064     0.1524  -2.666 0.007675 ** \nrisk_wall3    -1.1603     0.3002  -3.865 0.000111 ***\npovertyTRUE    0.6683     0.2760   2.422 0.015456 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2770.7  on 81209  degrees of freedom\nAIC: 2780.7\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(GLM.14))  # Exponentiated coefficients (\"odds ratios\")\n\n (Intercept) mushaharTRUE   risk_wall2   risk_wall3  povertyTRUE \n 0.001789926  6.729074823  0.666021666  0.313406479  1.950935905 \n\nexp(confint(GLM.14))\n\nWaiting for profiling to be done...\n\n\n                    2.5 %      97.5 %\n(Intercept)  0.0009857236 0.003061897\nmushaharTRUE 4.4406396469 9.913043491\nrisk_wall2   0.4934245075 0.897685663\nrisk_wall3   0.1676370338 0.547489293\npovertyTRUE  1.1674794260 3.464443760\n\n\n\nGLM.15 <- glm(case ~ mushahar + risk_wall + poverty+ poverty*mushahar, family=binomial(logit), data=final_dataset)\nsummary(GLM.15)\n\n\nCall:\nglm(formula = case ~ mushahar + risk_wall + poverty + poverty * \n    mushahar, family = binomial(logit), data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.3402  -0.0835  -0.0686  -0.0477   3.8813  \n\nCoefficients:\n                         Estimate Std. Error z value Pr(>|z|)    \n(Intercept)               -6.3864     0.2948 -21.665  < 2e-16 ***\nmushaharTRUE               3.5661     1.0545   3.382 0.000720 ***\nrisk_wall2                -0.3932     0.1524  -2.580 0.009873 ** \nrisk_wall3                -1.1452     0.2995  -3.824 0.000131 ***\npovertyTRUE                0.7282     0.2830   2.573 0.010090 *  \nmushaharTRUE:povertyTRUE  -1.6952     1.0767  -1.574 0.115399    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2769.0  on 81208  degrees of freedom\nAIC: 2781\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(GLM.15))  # Exponentiated coefficients (\"odds ratios\")\n\n             (Intercept)             mushaharTRUE               risk_wall2 \n             0.001684272             35.378557433              0.674874191 \n              risk_wall3              povertyTRUE mushaharTRUE:povertyTRUE \n             0.318151537              2.071327921              0.183570820 \n\n\n\nanova(GLM.15, GLM.14, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel 1: case ~ mushahar + risk_wall + poverty + poverty * mushahar\nModel 2: case ~ mushahar + risk_wall + poverty\n  Resid. Df Resid. Dev Df Deviance Pr(>Chi)\n1     81208     2769.0                     \n2     81209     2770.7 -1  -1.6552   0.1983\n\nexp(confint(GLM.14))\n\nWaiting for profiling to be done...\n\n\n                    2.5 %      97.5 %\n(Intercept)  0.0009857236 0.003061897\nmushaharTRUE 4.4406396469 9.913043491\nrisk_wall2   0.4934245075 0.897685663\nrisk_wall3   0.1676370338 0.547489293\npovertyTRUE  1.1674794260 3.464443760\n\n\n\nGLM.16 <- glm(case ~ mushahar + risk_wall + poverty + poverty * risk_wall, family=binomial(logit), data=final_dataset)\nsummary(GLM.16)\n\n\nCall:\nglm(formula = case ~ mushahar + risk_wall + poverty + poverty * \n    risk_wall, family = binomial(logit), data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.2171  -0.0834  -0.0674  -0.0529   3.9382  \n\nCoefficients:\n                       Estimate Std. Error z value Pr(>|z|)    \n(Intercept)             -6.2980     0.7081  -8.895   <2e-16 ***\nmushaharTRUE             1.9232     0.2055   9.359   <2e-16 ***\nrisk_wall2              -0.2734     0.7755  -0.353    0.724    \nrisk_wall3              -1.4565     0.8375  -1.739    0.082 .  \npovertyTRUE              0.6391     0.7155   0.893    0.372    \nrisk_wall2:povertyTRUE  -0.1535     0.7919  -0.194    0.846    \nrisk_wall3:povertyTRUE   0.4649     0.9012   0.516    0.606    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2769.7  on 81207  degrees of freedom\nAIC: 2783.7\n\nNumber of Fisher Scoring iterations: 10\n\nexp(coef(GLM.16))  # Exponentiated coefficients (\"odds ratios\")\n\n           (Intercept)           mushaharTRUE             risk_wall2 \n           0.001840039            6.843011327            0.760783379 \n            risk_wall3            povertyTRUE risk_wall2:povertyTRUE \n           0.233049204            1.894688890            0.857698549 \nrisk_wall3:povertyTRUE \n           1.591790752 \n\n\n\nanova(GLM.16, GLM.14, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel 1: case ~ mushahar + risk_wall + poverty + poverty * risk_wall\nModel 2: case ~ mushahar + risk_wall + poverty\n  Resid. Df Resid. Dev Df Deviance Pr(>Chi)\n1     81207     2769.7                     \n2     81209     2770.7 -2 -0.93817   0.6256\n\n\n\nGLM.17 <- glm(case ~ mushahar + risk_wall + poverty + mushahar * risk_wall, family=binomial(logit), data=final_dataset)\nsummary(GLM.17)\n\n\nCall:\nglm(formula = case ~ mushahar + risk_wall + poverty + mushahar * \n    risk_wall, family = binomial(logit), data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.2329  -0.0830  -0.0686  -0.0488   3.8668  \n\nCoefficients:\n                        Estimate Std. Error z value Pr(>|z|)    \n(Intercept)              -6.3480     0.2911 -21.804  < 2e-16 ***\nmushaharTRUE              2.0743     0.3975   5.218 1.81e-07 ***\nrisk_wall2               -0.3836     0.1617  -2.373 0.017661 *  \nrisk_wall3               -1.1275     0.3022  -3.731 0.000191 ***\npovertyTRUE               0.6798     0.2767   2.457 0.014011 *  \nmushaharTRUE:risk_wall2  -0.2095     0.4623  -0.453 0.650490    \nmushaharTRUE:risk_wall3 -10.6752   229.0476  -0.047 0.962827    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2770.0  on 81207  degrees of freedom\nAIC: 2784\n\nNumber of Fisher Scoring iterations: 14\n\nexp(coef(GLM.17))  # Exponentiated coefficients (\"odds ratios\")\n\n            (Intercept)            mushaharTRUE              risk_wall2 \n           1.750327e-03            7.958964e+00            6.813884e-01 \n             risk_wall3             povertyTRUE mushaharTRUE:risk_wall2 \n           3.238380e-01            1.973455e+00            8.110079e-01 \nmushaharTRUE:risk_wall3 \n           2.311089e-05 \n\n\n\nanova(GLM.17, GLM.14, test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel 1: case ~ mushahar + risk_wall + poverty + mushahar * risk_wall\nModel 2: case ~ mushahar + risk_wall + poverty\n  Resid. Df Resid. Dev Df Deviance Pr(>Chi)\n1     81207     2770.0                     \n2     81209     2770.7 -2 -0.70753    0.702\n\n\nSo then my final model here is model 14: case = poverty + risk_wall + mushahar, but since poverty did not have any interactions we go back to model 7. Model 7 is the final model.\n\nGLM.7 <- glm(case ~ mushahar + risk_wall + asset_index, family=binomial(logit), data=final_dataset)\nsummary(GLM.7)\n\n\nCall:\nglm(formula = case ~ mushahar + risk_wall + asset_index, family = binomial(logit), \n    data = final_dataset)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.2709  -0.0772  -0.0656  -0.0484   3.8634  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -5.81466    0.16086 -36.148  < 2e-16 ***\nmushaharTRUE  1.96990    0.22180   8.881  < 2e-16 ***\nrisk_wall2   -0.40614    0.15684  -2.590 0.009609 ** \nrisk_wall3   -1.11997    0.30776  -3.639 0.000274 ***\nasset_index2  0.55815    0.19458   2.869 0.004124 ** \nasset_index3 -0.08206    0.22363  -0.367 0.713656    \nasset_index4  0.08176    0.22907   0.357 0.721141    \nasset_index5 -0.52755    0.31406  -1.680 0.092998 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2885.9  on 81213  degrees of freedom\nResidual deviance: 2758.5  on 81206  degrees of freedom\nAIC: 2774.5\n\nNumber of Fisher Scoring iterations: 9\n\nexp(coef(GLM.7))  # Exponentiated coefficients (\"odds ratios\")\n\n (Intercept) mushaharTRUE   risk_wall2   risk_wall3 asset_index2 asset_index3 \n 0.002983507  7.169994094  0.666215469  0.326289121  1.747430447  0.921214685 \nasset_index4 asset_index5 \n 1.085197543  0.590046584 \n\nexp(confint(GLM.7))\n\nWaiting for profiling to be done...\n\n\n                   2.5 %       97.5 %\n(Intercept)  0.002150039  0.004041636\nmushaharTRUE 4.582946449 10.957987112\nrisk_wall2   0.489354472  0.905649249\nrisk_wall3   0.172344535  0.579799021\nasset_index2 1.193911726  2.564485167\nasset_index3 0.590438223  1.422810718\nasset_index4 0.689253185  1.696017962\nasset_index5 0.311077759  1.071790719\n\n\nodds ratios: mushahar 7.2 (4.4-9.9), brick wall vs thatched wall 0.7 (0.5-0.9), plastered brick wall vs. thatched wall 0.3 (0.2-0.5)\nand assetindex 1.7(1.2-2.6), 0.9(0.6-1.4), 1.1(0.7-1.7), 0.6(0.3-1.1)\nAt the end I export my final dataset to csv so I can use it in other programs\nwrite.table(final_dataset, “final_dataset.csv”, sep=“,”, col.names=TRUE, row.names=FALSE, quote=TRUE, na=“NA”)\n#The poorest of the poor: bihar viscerlar leshmaniasis #Visceral Leshmaniasis in Bihar"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Analysis Course - Optional",
    "section": "",
    "text": "Welcome! These notes are from the Data Analysis Course (optional) at the Institute of Tropical Medicine in Antwerp.\nThis case involves the data cleaning and data analysis of a dataset from a project in Bihar, India (funded by TMRC, Tropical Medicine Research Council) that was used in a published analysis on risk factors for visceral leishmaniasis (Hasker et al. 2012).\nThese notes were made as an extended reference for the solution script given by Tom Smekens PhD. All this webpage was created using RStudio with Quarto. I hope you find it useful! If you find any errors, please let me know, thanks!"
  },
  {
    "objectID": "index.html#disclaimer",
    "href": "index.html#disclaimer",
    "title": "Data Analysis Course - Optional",
    "section": "Disclaimer",
    "text": "Disclaimer\nPlease note: These notes are a reflection of an own understanding and may not exactly match all the codes provided in class. Use them as a guide and always verify the solutions."
  },
  {
    "objectID": "index.html#navigation",
    "href": "index.html#navigation",
    "title": "Data Analysis Course - Optional",
    "section": "Navigation",
    "text": "Navigation\nUse the sidebar on the left to navigate through the different exercises."
  },
  {
    "objectID": "index.html#author",
    "href": "index.html#author",
    "title": "Data Analysis Course - Optional",
    "section": "Author",
    "text": "Author\nJavier Silva-Valencia javier.silva@unmsm.edu.pe"
  },
  {
    "objectID": "Sets.html#material-to-work",
    "href": "Sets.html#material-to-work",
    "title": "The data",
    "section": "Material to Work",
    "text": "Material to Work\nAs a result of the survey (which was carried out at different times and/or using different units of analysis), five different data sets plus a list of codes were obtained.\n\n\n\n\n\nflowchart TD\n  A[Q1_B]\n  B[Q1_B_1]\n  C[Q1_B_106]\n  D[Q1_Screening]\n  E[Questionnaire_1]\n\n\n\n\n\n\n\n\n1. Dataset: Q1_B\nThe unit of this data set is a household. It contains information about environmental factors such as the presence of certain trees, water bodies, wall material, organic material and mosquito nets\n\nsetwd(\"C:/Users/pined/OneDrive - Universidad Nacional Mayor de San Marcos/Javier 2022/Belgica/AC2_DataAnalysis_ThWk/Data_Analysis_Course_CaseBihar\") \n\n\nQ1_B <- read.csv(\"Material/Q1_B.csv\", sep=\",\", dec= \".\")\nstr(Q1_B)\n\n'data.frame':   13377 obs. of  40 variables:\n $ ID                 : int  1 2 3 4 5 6 7 8 9 10 ...\n $ FSN                : num  45001 45002 45003 45004 45005 ...\n $ Neem_Tree          : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Neem_Tree_Distance : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Size     : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Age      : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Neem_Tree_Usage    : chr  \"\" \"\" \"\" \"\" ...\n $ Neem_Tree_Use_Other: chr  \"\" \"\" \"\" \"\" ...\n $ Bamboo_Tree        : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Bamboo_Tree_Dist   : num  3 10 16 17 5 4 15 3 1 10 ...\n $ Banana_Tree        : num  0 0 0 0 0 0 0 1 1 0 ...\n $ Banana_Tree_Dist   : num  -1 -1 -1 -1 -1 -1 -1 5 1 -1 ...\n $ Rice_Field         : num  1 1 1 1 1 1 1 1 1 1 ...\n $ Rice_Field_Dist    : num  4 12 16 13 4 13 10 10 7 12 ...\n $ Perm_Water_Body    : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Perm_Wat_Body_Dist : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wat_Body_Mid_Point : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ No_Mosquito_Net    : num  0 2 1 0 0 0 0 0 1 0 ...\n $ Sprayed_2010       : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Sprayed_2009       : num  86 86 86 86 86 86 86 86 86 86 ...\n $ Floor_Material     : num  153 153 153 153 153 153 153 153 155 153 ...\n $ Other_Floor_Mat    : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Is_Floor_Damp      : num  1 1 1 1 1 1 1 1 0 1 ...\n $ Roof_Material      : num  161 159 158 156 156 156 156 158 158 156 ...\n $ Other_Roof_Material: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Wall_Material      : num  164 164 164 162 163 163 162 164 164 162 ...\n $ Other_Wall_Material: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Windows_in_Room    : num  1 1 1 0 0 0 0 1 1 0 ...\n $ Granaries_in_HH    : num  1 1 1 0 1 1 0 1 1 0 ...\n $ Source_Drink_Water : num  167 167 92 92 92 92 92 92 92 92 ...\n $ Other_Src_Drink_Wat: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Toilet_Facility    : num  177 177 177 177 177 177 177 177 177 177 ...\n $ Other_Toilet_Fac   : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Cooking_Fuel       : num  180 180 180 180 180 180 180 180 180 180 ...\n $ Other_Cooking_Fuel : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Source_Light       : num  182 182 182 182 182 182 182 182 182 182 ...\n $ Other_Source_Light : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Electricity_in_HH  : num  0 0 0 0 0 0 0 0 0 0 ...\n $ No_Of_Rooms        : num  2 2 3 1 2 3 2 1 3 1 ...\n $ No_Sleeping_Rooms  : num  2 2 2 1 2 2 2 1 1 1 ...\n\n\n\nsum(duplicated(Q1_B$FSN))   #Counting duplicate values in FSN collumn\n\n[1] 0\n\n\n\n\n\n\n\n\nTip\n\n\n\nThere is no duplicates rows in FSN (Household number). So each row is a unique household\n\n\n2. Dataset: “Q1_B_1”\nThe unit of this data set is the animals in the household. It contains information about the owning of animals. Each row refers to an animal from a household.\n\nQ1_B_1 <- read.csv(\"Material/Q1_B_1.csv\", sep=\",\", dec= \".\")\nstr(Q1_B_1)\n\n'data.frame':   9029 obs. of  6 variables:\n $ FSN              : int  45001 45001 45002 45003 45004 45006 45009 45021 45021 45024 ...\n $ Animal_Name      : chr  \"Goats\" \"Poultry (chickens, ducks, pigeon)\" \"Buffaloes\" \"Cows/Oxen\" ...\n $ Animal_Count     : int  3 1 1 1 2 2 7 3 1 3 ...\n $ Animal_Distance  : int  5 0 4 3 5 0 0 15 5 15 ...\n $ Keep_Inside_House: int  1 1 0 1 1 1 1 0 1 1 ...\n $ Days_Inside_House: int  120 365 -1 210 180 360 360 -1 150 90 ...\n\n\n\nsum(duplicated(Q1_B_1$FSN)) #Counting duplicate values in FSN column\n\n[1] 1882\n\n\n\n\n\n\n\n\nTip\n\n\n\nThere are 1882 duplicates in FSN column (Household number). This means that some households have more than one type of animal\n\n\n3. Dataset: “Q1_B_106”\nThe unit of this data set is a household. It contains information about durable consumer goods at the level of the household.\n\nQ1_B_106 <- read.csv(\"Material/Q1_B_106.csv\", sep=\",\", dec= \".\")\nstr(Q1_B_106)\n\n'data.frame':   13377 obs. of  25 variables:\n $ FSN             : int  45001 45002 45003 45004 45005 45006 45007 45008 45009 45010 ...\n $ Radio           : int  1 1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ CD_Player       : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ BW_Television   : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Color_Television: int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Video_DVD_Player: int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Mobile          : int  -1 -1 -1 -1 -1 1 -1 -1 -1 -1 ...\n $ Non_Mobile_Phone: int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Refrigerator    : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Iron            : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Sewing_Machine  : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Watch           : int  -1 -1 -1 -1 -1 1 -1 -1 -1 -1 ...\n $ Pressure_Cooker : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Chairs          : int  1 -1 -1 -1 1 1 -1 -1 2 -1 ...\n $ Sofas           : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Tables          : int  -1 -1 -1 -1 -1 1 -1 -1 -1 -1 ...\n $ Cot_Bed         : int  2 2 3 -1 2 1 2 1 2 -1 ...\n $ Cupboards       : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Bicycle         : int  1 1 1 -1 -1 2 -1 -1 1 -1 ...\n $ Motor_Cycle     : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Animal_Draw_Cart: int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Car             : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Tractor         : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Computer        : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n $ Electric_Fan    : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...\n\n\n\nsum(duplicated(Q1_B_106$FSN)) #Counting duplicate values in FSN column\n\n[1] 0\n\n\n\n\n\n\n\n\nTip\n\n\n\nThere is no duplicates rows in FSN (Household number). So each row is a unique household\n\n\n4. Dataset: Q1_Screening\nThe unit of this data set is a person. It contains information about the age and sex of every person in a household as well if they were cases (had suffered visceral leshmaniasis since second survey)\n\nQ1_Screening <- read.csv(\"Material/Q1_Screening.csv\", sep=\",\", dec= \".\")\nstr(Q1_Screening)\n\n'data.frame':   81214 obs. of  10 variables:\n $ FSN                         : int  45001 45001 45001 45001 45001 45001 45002 45002 45002 45002 ...\n $ member_id                   : int  1 2 3 4 5 6 1 2 3 4 ...\n $ member_age                  : int  50 48 25 22 0 11 35 33 17 15 ...\n $ member_sex                  : int  2 3 2 3 2 2 2 3 2 2 ...\n $ fever_gt_3_days             : int  0 0 0 0 0 0 0 0 0 0 ...\n $ suffered_vl_since_2nd_survey: int  0 0 0 0 0 0 0 0 0 0 ...\n $ date_diagnosis              : chr  \"\" \"\" \"\" \"\" ...\n $ treatment_place             : chr  \"-1\" \"-1\" \"-1\" \"-1\" ...\n $ current_status              : int  0 0 4 0 0 0 0 0 4 0 ...\n $ datedis                     : int  NA NA NA NA NA NA NA NA NA NA ...\n\n\n5. Dataset: Questionnaire_1\nThe unit of this data set is the household. It contains information about the number and id of the village as well some demographic information about the head of the household\n\nQuestionnaire_1 <- read.csv(\"Material/Questionnaire_1.csv\", sep=\",\", dec= \".\")\nstr(Questionnaire_1)\n\n'data.frame':   13377 obs. of  10 variables:\n $ FSN                    : int  45001 45002 45003 45004 45005 45006 45007 45008 45009 45010 ...\n $ panchyat_id            : int  2 2 2 2 2 2 2 2 2 2 ...\n $ village_id             : int  11 11 11 11 11 11 11 11 11 11 ...\n $ ward_no                : int  1 1 1 1 1 1 1 1 1 1 ...\n $ household_no           : int  21 680 290 3390 181 3501 1401 2330 3750 2371 ...\n $ household_head_age     : int  50 35 60 35 40 40 60 23 25 40 ...\n $ household_head_sex     : int  2 2 2 2 2 2 2 2 2 3 ...\n $ household_head_religion: int  4 4 4 4 4 4 4 4 4 4 ...\n $ household_head_caste   : int  9 9 9 9 9 9 9 9 9 9 ...\n $ household_head_subcaste: chr  \"PASWAN\" \"PASWAN\" \"PASWAN\" \"PASWAN\" ...\n\n\n6. Code_List\nThis file contains the interpretation of all the codes used among all datasets.\n\nCode_List <- read.csv(\"Material/Code_List.csv\", sep=\",\", dec= \".\")\nhead(Code_List, 10)  #Example of 10 first codes meaning\n\n   Code                                          Code_Text\n1   183                                            Candles\n2    -1                                           No Value\n3   184                                           Brushing\n4   185 Leaves/Seeds used as insecticide for grain storage\n5   186                 Neem Oil used for skin application\n6   187                        Burn leaves to create smoke\n7   188                                          Not Using\n8     0                                                 No\n9     1                                                Yes\n10    2                                               Male"
  }
]